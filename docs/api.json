{
	"id": 0,
	"name": "@theintern/leadfoot",
	"kind": 0,
	"kindString": "Project",
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 663,
			"name": "Command",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "The Command class is a chainable, subclassable object type that can be used\nto execute commands serially against a remote WebDriver environment. The\nstandard Command class includes methods from the [[Session]] and [[Element]]\nclasses, so you can perform all standard session and element operations that\ncome with Leadfoot without being forced to author long promise chains.",
				"text": "In order to use the Command class, you first need to pass it a [[Session]]\ninstance for it to use:\n\n```js\nconst command = new Command(session);\n```\n\nOnce you have created the Command, you can then start chaining methods, and\nthey will execute in order one after another:\n\n```js\ncommand.get('http://example.com')\n    .findByTagName('h1')\n    .getVisibleText()\n    .then(function (text) {\n        assert.strictEqual(text, 'Example Domain');\n    });\n```\n\nBecause these operations are asynchronous, you need to use a `then` callback\nin order to retrieve the value from the last method. Command objects are\nPromiseLikes, which means that they can be used with any Promises/A+ or\nES6-conformant Promises implementation, though there are some specific\ndifferences in the arguments and context that are provided to callbacks; see\n[[Command.Command.then]] for more details.\n\nBecause Commands are promise-like, they may also be used with `async/await`:\n\n```js\nconst page = await command.get('http://example.com');\nconst h1 = await page.findByTagName('h1');\nconst text = await h1.getVisibleText();\nassert.strictEqual(text, 'Example Domain');\n```\n\n---\n\nEach call on a Command generates a new Command object, which means that\ncertain operations can be parallelised:\n\n```js\ncommand = command.get('http://example.com');\nPromise.all([\n    command.getPageTitle(),\n    command.findByTagName('h1').getVisibleText()\n]).then(results => {\n    assert.strictEqual(results[0], results[1]);\n});\n```\n\nIn this example, the commands on line 3 and 4 both depend upon the `get`\ncall completing successfully but are otherwise independent of each other and\nso execute here in parallel. This is different from commands in Intern 1\nwhich were always chained onto the last called method within a given test.\n\n---\n\nCommand objects actually encapsulate two different types of interaction:\n*session* interactions, which operate against the entire browser session,\nand *element* interactions, which operate against specific elements taken\nfrom the currently loaded page. Things like navigating the browser, moving\nthe mouse cursor, and executing scripts are session interactions; things\nlike getting text displayed on the page, typing into form fields, and\ngetting element attributes are element interactions.\n\nSession interactions can be performed at any time, from any Command. On the\nother hand, to perform element interactions, you first need to retrieve one\nor more elements to interact with. This can be done using any of the `find`\nor `findAll` methods, by the `getActiveElement` method, or by returning\nelements from `execute` or `executeAsync` calls. The retrieved elements are\nstored internally as the *element context* of all chained Commands. When an\nelement method is called on a chained Command with a single element context,\nthe result will be returned as-is:\n\n```js\ncommand = command.get('http://example.com')\n    // finds one element -> single element context\n    .findByTagName('h1')\n    .getVisibleText()\n    .then(text => {\n        // `text` is the text from the element context\n        assert.strictEqual(text, 'Example Domain');\n    });\n```\n\nWhen an element method is called on a chained Command with a multiple\nelement context, the result will be returned as an array:\n\n```js\ncommand = command.get('http://example.com')\n    // finds multiple elements -> multiple element context\n    .findAllByTagName('p')\n    .getVisibleText()\n    .then(texts => {\n        // `texts` is an array of text from each of the `p` elements\n        assert.deepEqual(texts, [\n            'This domain is established to be used for […]',\n            'More information...'\n        ]);\n    });\n```\n\nThe `find` and `findAll` methods are special and change their behaviour\nbased on the current element filtering state of a given command. If a\ncommand has been filtered by element, the `find` and `findAll` commands will\nonly find elements *within* the currently filtered set of elements.\nOtherwise, they will find elements throughout the page.\n\nSome method names, like `click`, are identical for both Session and Element\nAPIs; in this case, the element APIs are suffixed with the word `Element` in\norder to identify them uniquely.\n\n---\n\nCommands can be subclassed in order to add additional functionality without\nmaking direct modifications to the default Command prototype that might\nbreak other parts of the system:\n\n```ts\nclass CustomCommand extends Command {\n    login(username: string, password: string) {\n        return new this.constructor(this, function () {\n            return this.parent\n                .findById('username')\n                .click()\n                .type(username)\n                .end()\n\n                .findById('password')\n                .click()\n                .type(password)\n                .end()\n\n                .findById('login')\n                .click()\n                .end();\n        });\n    }\n}\n```\n\n>  ⚠️Note that returning `this`, or a command chain starting from `this`,\nfrom a callback or command initialiser will deadlock the Command, as it\nwaits for itself to settle before settling.\n"
			},
			"children": [
				{
					"id": 679,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 680,
							"name": "new Command",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {},
							"typeParameter": [
								{
									"id": 681,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 682,
									"name": "P",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 683,
									"name": "StringResult",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 684,
									"name": "parentOrSession",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"id": 63,
												"name": "default"
											},
											{
												"type": "reference",
												"id": 663,
												"typeArguments": [
													{
														"type": "reference",
														"name": "P"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"name": "StringResult"
													}
												],
												"name": "default"
											}
										]
									}
								},
								{
									"id": 685,
									"name": "initialiser",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "A function that will be executed when all parent\ncommands have completed execution. This function can create a new\ncontext for this command by calling the passed `setContext` function any\ntime prior to resolving the Promise that it returns. If no context is\nexplicitly provided, the context from the parent command will be used.\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 686,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 687,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 688,
															"name": "setContext",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "SetContextMethod"
															}
														},
														{
															"id": 689,
															"name": "value",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "T"
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"name": "T"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"name": "T"
																	}
																],
																"name": "PromiseLike"
															}
														]
													}
												}
											]
										}
									}
								},
								{
									"id": 690,
									"name": "errback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "A function that will be executed if any parent commands\nfailed to complete successfully. This function can create a new context\nfor the current command by calling the passed `setContext` function any\ntime prior to resolving the Promise that it returns. If no context is\nexplicitly provided, the context from the parent command will be used.\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 691,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 692,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 693,
															"name": "setContext",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "reference",
																"name": "SetContextMethod"
															}
														},
														{
															"id": 694,
															"name": "error",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"name": "T"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"name": "T"
																	}
																],
																"name": "PromiseLike"
															}
														]
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "reference",
										"name": "T"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							},
							"overwrites": {
								"type": "reference",
								"name": "Locator<\n    Command<Element, P, string>,\n    Command<Element[], P, string[]>,\n    Command<void, P, StringResult>\n  >.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Locator<\n    Command<Element, P, string>,\n    Command<Element[], P, string[]>,\n    Command<void, P, StringResult>\n  >.constructor"
					}
				},
				{
					"id": 703,
					"name": "context",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "The filtered elements that will be used if an element-specific method is\ninvoked. Note that this property is not valid until the parent Command\nhas been settled. The context array also has two additional properties:",
						"text": "* `isSingle` (boolean): If true, the context will always contain a\n  single element. This is used to differentiate between methods that\n  should still return scalar values (`find`) and methods that should\n  return arrays of values even if there is only one element in the\n  context (`findAll`).\n* `depth` (number): The depth of the context within the command chain.\n  This is used to prevent traversal into higher filtering levels by\n  [[Command.Command.end]].\n"
					},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 483,
							"character": 13
						}
					],
					"getSignature": [
						{
							"id": 704,
							"name": "context",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "The filtered elements that will be used if an element-specific method is\ninvoked. Note that this property is not valid until the parent Command\nhas been settled. The context array also has two additional properties:",
								"text": "* `isSingle` (boolean): If true, the context will always contain a\n  single element. This is used to differentiate between methods that\n  should still return scalar values (`find`) and methods that should\n  return arrays of values even if there is only one element in the\n  context (`findAll`).\n* `depth` (number): The depth of the context within the command chain.\n  This is used to prevent traversal into higher filtering levels by\n  [[Command.Command.end]].\n"
							},
							"type": {
								"type": "reference",
								"name": "Context"
							}
						}
					]
				},
				{
					"id": 699,
					"name": "parent",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "The parent Command of the Command, if one exists. This will be defined\nfor all commands but the top-level Session command (i.e., in most\ncontexts user code will call it)."
					},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 458,
							"character": 12
						}
					],
					"getSignature": [
						{
							"id": 700,
							"name": "parent",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "The parent Command of the Command, if one exists. This will be defined\nfor all commands but the top-level Session command (i.e., in most\ncontexts user code will call it)."
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 705,
					"name": "promise",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "The underlying Promise for the Command.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 492,
							"character": 13
						}
					],
					"getSignature": [
						{
							"id": 706,
							"name": "promise",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "The underlying Promise for the Command.",
								"tags": [
									{
										"tag": "readonly",
										"text": "\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 701,
					"name": "session",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "The parent Session of the Command."
					},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 465,
							"character": 13
						}
					],
					"getSignature": [
						{
							"id": 702,
							"name": "session",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "The parent Session of the Command."
							},
							"type": {
								"type": "reference",
								"id": 63,
								"name": "default"
							}
						}
					]
				},
				{
					"id": 886,
					"name": "acceptAlert",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1294,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 887,
							"name": "acceptAlert",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Accepts an alert, prompt, or confirmation pop-up. Equivalent to clicking\nthe 'OK' button."
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 813,
					"name": "activateIme",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1044,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 814,
							"name": "activateIme",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Activates an input method editor in the remote environment.\nAs of April 2014, no known remote environments support IME functions."
							},
							"parameters": [
								{
									"id": 815,
									"name": "engine",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The type of IME to activate.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 738,
					"name": "cancel",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 707,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 739,
							"name": "cancel",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Cancels all outstanding chained operations of the Command. Calling this\nmethod will cause this command and all subsequent chained commands to\nfail with a CancelError."
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "reference",
										"name": "T"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 726,
					"name": "catch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 684,
							"character": 7
						}
					],
					"signatures": [
						{
							"id": 727,
							"name": "catch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Adds a callback to be invoked when any of the previously chained\noperations have failed."
							},
							"typeParameter": [
								{
									"id": 728,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							],
							"parameters": [
								{
									"id": 729,
									"name": "errback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 730,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 731,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 732,
															"name": "reason",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"name": "R"
															},
															{
																"type": "reference",
																"typeArguments": [
																	{
																		"type": "reference",
																		"name": "R"
																	}
																],
																"name": "PromiseLike"
															}
														]
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 862,
					"name": "clearCookies",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1204,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 863,
							"name": "clearCookies",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Clears all cookies for the current page."
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 992,
					"name": "clearValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1683,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 993,
							"name": "clearValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Clears the value of a form element."
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 981,
					"name": "click",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1631,
							"character": 7
						}
					],
					"signatures": [
						{
							"id": 982,
							"name": "click",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Clicks the element. This method works on both mouse and touch platforms."
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 898,
					"name": "clickMouseButton",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1351,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 899,
							"name": "clickMouseButton",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Clicks a mouse button at the point where the mouse cursor is currently\npositioned. This method may fail to execute with an error if the mouse\nhas not been moved anywhere since the page was loaded."
							},
							"parameters": [
								{
									"id": 900,
									"name": "button",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The button to click. 0 corresponds to the primary mouse\nbutton, 1 to the middle mouse button, 2 to the secondary mouse button.\nNumbers above 2 correspond to any additional buttons a mouse might\nprovide.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 824,
					"name": "closeCurrentWindow",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1089,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 825,
							"name": "closeCurrentWindow",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Closes the currently focused window. In most environments, after the\nwindow has been closed, it is necessary to explicitly switch to whatever\nwindow is now focused."
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 811,
					"name": "deactivateIme",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1034,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 812,
							"name": "deactivateIme",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Deactivates any active input method editor in the remote environment.\nAs of April 2014, no known remote environments support IME functions."
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 864,
					"name": "deleteCookie",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1213,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 865,
							"name": "deleteCookie",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Deletes a cookie on the current page."
							},
							"parameters": [
								{
									"id": 866,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The name of the cookie to delete.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 888,
					"name": "dismissAlert",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1303,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 889,
							"name": "dismissAlert",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Dismisses an alert, prompt, or confirmation pop-up. Equivalent to\nclicking the 'OK' button of an alert pop-up or the 'Cancel' button of a\nprompt or confirmation pop-up."
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 907,
					"name": "doubleClick",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1378,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 908,
							"name": "doubleClick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Double-clicks the primary mouse button."
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 932,
					"name": "doubleTap",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1458,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 933,
							"name": "doubleTap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs a double-tap gesture on an element.",
								"tags": [
									{
										"tag": "method",
										"text": ""
									}
								]
							},
							"parameters": [
								{
									"id": 934,
									"name": "element",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The element to double-tap.\n"
									},
									"type": {
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 710,
					"name": "end",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 530,
							"character": 5
						}
					],
					"signatures": [
						{
							"id": 711,
							"name": "end",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Ends the most recent filtering operation in the current Command chain\nand returns the set of matched elements to the previous state. This is\nequivalent to the `jQuery#end` method.",
								"text": "```js\ncommand\n    .findById('parent') // sets filter to #parent\n    .findByClassName('child') // sets filter to all .child inside #parent\n    .getVisibleText()\n    .then(function (visibleTexts) {\n        // all the visible texts from the children\n    })\n    .end() // resets filter to #parent\n    .end(); // resets filter to nothing (the whole document)\n ```\n"
							},
							"parameters": [
								{
									"id": 712,
									"name": "numCommandsToPop",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The number of element contexts to pop. Defaults\nto 1.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "1"
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 1009,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1770,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 1010,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Determines if this element is equal to another element."
							},
							"parameters": [
								{
									"id": 1011,
									"name": "other",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 793,
					"name": "execute",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 960,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 794,
							"name": "execute",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Executes JavaScript code within the focused window/frame. The code\nshould return a value synchronously.",
								"text": "See [[Command.Command.executeAsync]] to execute code that returns values\nasynchronously.\n",
								"returns": "The value returned by the remote code. Only values that can be\nserialised to JSON, plus DOM elements, can be returned.\n"
							},
							"typeParameter": [
								{
									"id": 795,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 796,
									"name": "script",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The code to execute. This function will always be\nconverted to a string, sent to the remote environment, and reassembled\nas a new anonymous function on the remote end. This means that you\ncannot access any variables through closure. If your code needs to get\ndata from variables on the local end, they should be passed using\n`args`.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Function"
											}
										]
									}
								},
								{
									"id": 797,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "An array of arguments that will be passed to the executed\ncode. Only values that can be serialised to JSON, plus [[Element]]\nobjects, can be specified as arguments.\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "reference",
										"name": "T"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 798,
					"name": "executeAsync",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 993,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 799,
							"name": "executeAsync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Executes JavaScript code within the focused window/frame. The code must\ninvoke the provided callback in order to signal that it has completed\nexecution.",
								"text": "See [[Command.Command.execute]] to execute code that returns values\nsynchronously.\n\nSee [[Command.Command.setExecuteAsyncTimeout]] to set the time until an\nasynchronous script is considered timed out.\n",
								"returns": "The value returned by the remote code. Only values that can be\nserialised to JSON, plus DOM elements, can be returned.\n"
							},
							"typeParameter": [
								{
									"id": 800,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 801,
									"name": "script",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The code to execute. This function will always be\nconverted to a string, sent to the remote environment, and reassembled\nas a new anonymous function on the remote end. This means that you\ncannot access any variables through closure. If your code needs to get\ndata from variables on the local end, they should be passed using\n`args`.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Function"
											}
										]
									}
								},
								{
									"id": 802,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "An array of arguments that will be passed to the executed\ncode. Only values that can be serialised to JSON, plus [[Element]]\nobjects, can be specified as arguments. In addition to these arguments,\na callback function will always be passed as the final argument to the\nfunction specified in `script`. This callback function must be invoked\nin order to signal that execution has completed. The return value of the\nexecution, if any, should be passed to this callback function.\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "reference",
										"name": "T"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 733,
					"name": "finally",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 697,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 734,
							"name": "finally",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Adds a callback to be invoked once the previously chained operations\nhave resolved."
							},
							"parameters": [
								{
									"id": 735,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 736,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 737,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "reference",
										"name": "T"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 740,
					"name": "find",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 712,
							"character": 6
						}
					],
					"signatures": [
						{
							"id": 741,
							"name": "find",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 742,
									"name": "strategy",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "class name"
											},
											{
												"type": "literal",
												"value": "id"
											},
											{
												"type": "literal",
												"value": "name"
											},
											{
												"type": "literal",
												"value": "partial link text"
											},
											{
												"type": "literal",
												"value": "tag name"
											},
											{
												"type": "literal",
												"value": "css selector"
											},
											{
												"type": "literal",
												"value": "link text"
											},
											{
												"type": "literal",
												"value": "xpath"
											}
										]
									}
								},
								{
									"id": 743,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "default"
							},
							"overwrites": {
								"type": "reference",
								"name": "Locator.find"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Locator.find"
					}
				},
				{
					"id": 744,
					"name": "findAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 716,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 745,
							"name": "findAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 746,
									"name": "strategy",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "class name"
											},
											{
												"type": "literal",
												"value": "id"
											},
											{
												"type": "literal",
												"value": "name"
											},
											{
												"type": "literal",
												"value": "partial link text"
											},
											{
												"type": "literal",
												"value": "tag name"
											},
											{
												"type": "literal",
												"value": "css selector"
											},
											{
												"type": "literal",
												"value": "link text"
											},
											{
												"type": "literal",
												"value": "xpath"
											}
										]
									}
								},
								{
									"id": 747,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 475,
											"name": "default"
										}
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "default"
							},
							"overwrites": {
								"type": "reference",
								"name": "Locator.findAll"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Locator.findAll"
					}
				},
				{
					"id": 1051,
					"name": "findAllByClassName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 106,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1052,
							"name": "findAllByClassName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets all elements inside this element matching the given CSS class name."
							},
							"parameters": [
								{
									"id": 1053,
									"name": "className",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The CSS class name to search for.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 475,
											"name": "default"
										}
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findAllByClassName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findAllByClassName"
					}
				},
				{
					"id": 1054,
					"name": "findAllByCssSelector",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 115,
							"character": 22
						}
					],
					"signatures": [
						{
							"id": 1055,
							"name": "findAllByCssSelector",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets all elements inside this element matching the given CSS selector."
							},
							"parameters": [
								{
									"id": 1056,
									"name": "selector",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The CSS selector to search for.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 475,
											"name": "default"
										}
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findAllByCssSelector"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findAllByCssSelector"
					}
				},
				{
					"id": 1060,
					"name": "findAllByLinkText",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 134,
							"character": 19
						}
					],
					"signatures": [
						{
							"id": 1061,
							"name": "findAllByLinkText",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets all elements inside this element matching the given\ncase-insensitive link text."
							},
							"parameters": [
								{
									"id": 1062,
									"name": "text",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The link text of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 475,
											"name": "default"
										}
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findAllByLinkText"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findAllByLinkText"
					}
				},
				{
					"id": 1057,
					"name": "findAllByName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 124,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 1058,
							"name": "findAllByName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets all elements inside this element matching the given name attribute."
							},
							"parameters": [
								{
									"id": 1059,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The name of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 475,
											"name": "default"
										}
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findAllByName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findAllByName"
					}
				},
				{
					"id": 1063,
					"name": "findAllByPartialLinkText",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 144,
							"character": 26
						}
					],
					"signatures": [
						{
							"id": 1064,
							"name": "findAllByPartialLinkText",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets all elements inside this element partially matching the given\ncase-insensitive link text."
							},
							"parameters": [
								{
									"id": 1065,
									"name": "text",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The partial link text of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 475,
											"name": "default"
										}
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findAllByPartialLinkText"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findAllByPartialLinkText"
					}
				},
				{
					"id": 1066,
					"name": "findAllByTagName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 153,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 1067,
							"name": "findAllByTagName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets all elements inside this element matching the given HTML tag name."
							},
							"parameters": [
								{
									"id": 1068,
									"name": "tagName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The tag name of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 475,
											"name": "default"
										}
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findAllByTagName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findAllByTagName"
					}
				},
				{
					"id": 1069,
					"name": "findAllByXpath",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 162,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1070,
							"name": "findAllByXpath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets all elements inside this element matching the given XPath selector."
							},
							"parameters": [
								{
									"id": 1071,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The XPath selector to search for.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 475,
											"name": "default"
										}
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findAllByXpath"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findAllByXpath"
					}
				},
				{
					"id": 1027,
					"name": "findByClassName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 28,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 1028,
							"name": "findByClassName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first element inside this element matching the given CSS class\nname."
							},
							"parameters": [
								{
									"id": 1029,
									"name": "className",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The CSS class name to search for.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findByClassName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findByClassName"
					}
				},
				{
					"id": 1030,
					"name": "findByCssSelector",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 38,
							"character": 19
						}
					],
					"signatures": [
						{
							"id": 1031,
							"name": "findByCssSelector",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first element inside this element matching the given CSS\nselector."
							},
							"parameters": [
								{
									"id": 1032,
									"name": "selector",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The CSS selector to search for.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findByCssSelector"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findByCssSelector"
					}
				},
				{
					"id": 1033,
					"name": "findById",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 47,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 1034,
							"name": "findById",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first element inside this element matching the given ID."
							},
							"parameters": [
								{
									"id": 1035,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The ID of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findById"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findById"
					}
				},
				{
					"id": 1039,
					"name": "findByLinkText",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 67,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 1040,
							"name": "findByLinkText",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first element inside this element matching the given\ncase-insensitive link text."
							},
							"parameters": [
								{
									"id": 1041,
									"name": "text",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The link text of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findByLinkText"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findByLinkText"
					}
				},
				{
					"id": 1036,
					"name": "findByName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 57,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 1037,
							"name": "findByName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first element inside this element matching the given name\nattribute."
							},
							"parameters": [
								{
									"id": 1038,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The name of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findByName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findByName"
					}
				},
				{
					"id": 1042,
					"name": "findByPartialLinkText",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 77,
							"character": 23
						}
					],
					"signatures": [
						{
							"id": 1043,
							"name": "findByPartialLinkText",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first element inside this element partially matching the given\ncase-insensitive link text."
							},
							"parameters": [
								{
									"id": 1044,
									"name": "text",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The partial link text of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findByPartialLinkText"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findByPartialLinkText"
					}
				},
				{
					"id": 1045,
					"name": "findByTagName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 87,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 1046,
							"name": "findByTagName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first element inside this element matching the given HTML tag\nname."
							},
							"parameters": [
								{
									"id": 1047,
									"name": "tagName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The tag name of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findByTagName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findByTagName"
					}
				},
				{
					"id": 1048,
					"name": "findByXpath",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 97,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 1049,
							"name": "findByXpath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first element inside this element matching the given XPath\nselector."
							},
							"parameters": [
								{
									"id": 1050,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The XPath selector to search for.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findByXpath"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findByXpath"
					}
				},
				{
					"id": 748,
					"name": "findDisplayed",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 720,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 749,
							"name": "findDisplayed",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 750,
									"name": "strategy",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "class name"
											},
											{
												"type": "literal",
												"value": "id"
											},
											{
												"type": "literal",
												"value": "name"
											},
											{
												"type": "literal",
												"value": "partial link text"
											},
											{
												"type": "literal",
												"value": "tag name"
											},
											{
												"type": "literal",
												"value": "css selector"
											},
											{
												"type": "literal",
												"value": "link text"
											},
											{
												"type": "literal",
												"value": "xpath"
											}
										]
									}
								},
								{
									"id": 751,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "default"
							},
							"overwrites": {
								"type": "reference",
								"name": "Locator.findDisplayed"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Locator.findDisplayed"
					}
				},
				{
					"id": 1072,
					"name": "findDisplayedByClassName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 175,
							"character": 26
						}
					],
					"signatures": [
						{
							"id": 1073,
							"name": "findDisplayedByClassName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first [[Element.isDisplayed|displayed]] element inside this\nelement matching the given CSS class name. This is inherently slower\nthan [[Element.find]], so should only be used in cases where the\nvisibility of an element cannot be ensured in advance.",
								"tags": [
									{
										"tag": "since",
										"text": "1.6"
									}
								]
							},
							"parameters": [
								{
									"id": 1074,
									"name": "className",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The CSS class name to search for.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findDisplayedByClassName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findDisplayedByClassName"
					}
				},
				{
					"id": 1075,
					"name": "findDisplayedByCssSelector",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 188,
							"character": 28
						}
					],
					"signatures": [
						{
							"id": 1076,
							"name": "findDisplayedByCssSelector",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first [[Element.isDisplayed|displayed]] element inside this\nelement matching the given CSS selector. This is inherently slower than\n[[Element.find]], so should only be used in cases where the visibility\nof an element cannot be ensured in advance.",
								"tags": [
									{
										"tag": "since",
										"text": "1.6"
									}
								]
							},
							"parameters": [
								{
									"id": 1077,
									"name": "selector",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The CSS selector to search for.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findDisplayedByCssSelector"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findDisplayedByCssSelector"
					}
				},
				{
					"id": 1078,
					"name": "findDisplayedById",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 201,
							"character": 19
						}
					],
					"signatures": [
						{
							"id": 1079,
							"name": "findDisplayedById",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first [[Element.isDisplayed|displayed]] element inside this\nelement matching the given ID. This is inherently slower than\n[[Element.find]], so should only be used in cases where the visibility\nof an element cannot be ensured in advance.",
								"tags": [
									{
										"tag": "since",
										"text": "1.6"
									}
								]
							},
							"parameters": [
								{
									"id": 1080,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The ID of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findDisplayedById"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findDisplayedById"
					}
				},
				{
					"id": 1084,
					"name": "findDisplayedByLinkText",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 227,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 1085,
							"name": "findDisplayedByLinkText",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first [[Element.isDisplayed|displayed]] element inside this\nelement matching the given case-insensitive link text. This is\ninherently slower than [[Element.find]], so should only be used in cases\nwhere the visibility of an element cannot be ensured in advance.",
								"tags": [
									{
										"tag": "since",
										"text": "1.6"
									}
								]
							},
							"parameters": [
								{
									"id": 1086,
									"name": "text",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The link text of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findDisplayedByLinkText"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findDisplayedByLinkText"
					}
				},
				{
					"id": 1081,
					"name": "findDisplayedByName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 214,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 1082,
							"name": "findDisplayedByName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first [[Element.isDisplayed|displayed]] element inside this\nelement matching the given name attribute. This is inherently slower\nthan [[Element.find]], so should only be used in cases where the\nvisibility of an element cannot be ensured in advance.",
								"tags": [
									{
										"tag": "since",
										"text": "1.6"
									}
								]
							},
							"parameters": [
								{
									"id": 1083,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The name of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findDisplayedByName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findDisplayedByName"
					}
				},
				{
					"id": 1087,
					"name": "findDisplayedByPartialLinkText",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 240,
							"character": 32
						}
					],
					"signatures": [
						{
							"id": 1088,
							"name": "findDisplayedByPartialLinkText",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first [[Element.isDisplayed|displayed]] element inside this\nelement partially matching the given case-insensitive link text. This is\ninherently slower than [[Element.find]], so should only be used in cases\nwhere the visibility of an element cannot be ensured in advance.",
								"tags": [
									{
										"tag": "since",
										"text": "1.6"
									}
								]
							},
							"parameters": [
								{
									"id": 1089,
									"name": "text",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The partial link text of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findDisplayedByPartialLinkText"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findDisplayedByPartialLinkText"
					}
				},
				{
					"id": 1090,
					"name": "findDisplayedByTagName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 253,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 1091,
							"name": "findDisplayedByTagName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first [[Element.isDisplayed|displayed]] element inside this\nelement matching the given HTML tag name. This is inherently slower than\n[[Element.find]], so should only be used in cases where the visibility\nof an element cannot be ensured in advance.",
								"tags": [
									{
										"tag": "since",
										"text": "1.6"
									}
								]
							},
							"parameters": [
								{
									"id": 1092,
									"name": "tagName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The tag name of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findDisplayedByTagName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findDisplayedByTagName"
					}
				},
				{
					"id": 1093,
					"name": "findDisplayedByXpath",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 266,
							"character": 22
						}
					],
					"signatures": [
						{
							"id": 1094,
							"name": "findDisplayedByXpath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first [[Element.isDisplayed|displayed]] element inside this\nelement matching the given XPath selector. This is inherently slower\nthan [[Element.find]], so should only be used in cases where the\nvisibility of an element cannot be ensured in advance.",
								"tags": [
									{
										"tag": "since",
										"text": "1.6"
									}
								]
							},
							"parameters": [
								{
									"id": 1095,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The XPath selector to search for.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findDisplayedByXpath"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findDisplayedByXpath"
					}
				},
				{
					"id": 938,
					"name": "flickFinger",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1482,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 939,
							"name": "flickFinger",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Flicks a finger. Note that this method is currently badly specified and\nhighly dysfunctional and is only provided for the sake of completeness."
							},
							"parameters": [
								{
									"id": 940,
									"name": "element",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The element where the flick should start."
									},
									"type": {
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								},
								{
									"id": 941,
									"name": "xOffset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The x-offset in pixels to flick by."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 942,
									"name": "yOffset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The x-offset in pixels to flick by."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 943,
									"name": "speed",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The speed of the flick, in pixels per *second*. Most human\nflicks are 100–200ms, so this value will be higher than expected.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 944,
							"name": "flickFinger",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 945,
									"name": "xOffset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 946,
									"name": "yOffset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 947,
									"name": "speed",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 784,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 912,
							"character": 5
						}
					],
					"signatures": [
						{
							"id": 785,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Navigates the focused window/frame to a new URL."
							},
							"parameters": [
								{
									"id": 786,
									"name": "url",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 871,
					"name": "getActiveElement",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1237,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 872,
							"name": "getActiveElement",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the currently focused element from the focused window/frame."
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 807,
					"name": "getActiveImeEngine",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1017,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 808,
							"name": "getActiveImeEngine",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the currently active input method editor for the remote environment.\nAs of April 2014, no known remote environments support IME functions."
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 881,
					"name": "getAlertText",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1277,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 882,
							"name": "getAlertText",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the text displayed in the currently active alert pop-up."
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 780,
					"name": "getAllWindowHandles",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 898,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 781,
							"name": "getAllWindowHandles",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets a list of identifiers for all currently open windows."
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 958,
					"name": "getApplicationCacheStatus",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1552,
							"character": 27
						}
					],
					"signatures": [
						{
							"id": 959,
							"name": "getApplicationCacheStatus",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the current state of the HTML5 application cache for the current\npage.",
								"returns": "The cache status. One of 0 (uncached), 1 (cached/idle), 2\n(checking), 3 (downloading), 4 (update ready), 5 (obsolete).\n"
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 1001,
					"name": "getAttribute",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1751,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 1002,
							"name": "getAttribute",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets an attribute of the element.",
								"text": "See [[Element.Element.getProperty]] to retrieve an element property.\n",
								"returns": "The value of the attribute, or `null` if no such attribute\nexists.\n"
							},
							"typeParameter": [
								{
									"id": 1003,
									"name": "S",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "reference",
										"name": "StringResult"
									}
								}
							],
							"parameters": [
								{
									"id": 1004,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The name of the attribute."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "reference",
										"name": "S"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 805,
					"name": "getAvailableImeEngines",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1009,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 806,
							"name": "getAvailableImeEngines",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets a list of input method editor engines available to the remote\nenvironment. As of April 2014, no known remote environments support IME\nfunctions."
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 956,
					"name": "getAvailableLogTypes",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1541,
							"character": 22
						}
					],
					"signatures": [
						{
							"id": 957,
							"name": "getAvailableLogTypes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the types of logs that are currently available for retrieval from\nthe remote environment."
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 1024,
					"name": "getComputedStyle",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1815,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 1025,
							"name": "getComputedStyle",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets a CSS computed property value for the element."
							},
							"parameters": [
								{
									"id": 1026,
									"name": "propertyName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The CSS property to retrieve. This argument must be\nhyphenated, *not* camel-case.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "reference",
										"name": "StringResult"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 857,
					"name": "getCookies",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1190,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 858,
							"name": "getCookies",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets all cookies set on the current page."
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1604,
											"name": "WebDriverCookie"
										}
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 782,
					"name": "getCurrentUrl",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 905,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 783,
							"name": "getCurrentUrl",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the URL that is loaded in the focused window/frame."
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 778,
					"name": "getCurrentWindowHandle",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 891,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 779,
							"name": "getCurrentWindowHandle",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the identifier for the window that is currently focused.",
								"returns": "A window handle identifier that can be used with other window\nhandling functions.\n"
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 966,
					"name": "getExecuteAsyncTimeout",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1581,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 967,
							"name": "getExecuteAsyncTimeout",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the timeout for [[Command.Command.executeAsync]] calls."
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 971,
					"name": "getFindTimeout",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1597,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 972,
							"name": "getFindTimeout",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the timeout for [[Command.Command.find]] calls."
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 948,
					"name": "getGeolocation",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1505,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 949,
							"name": "getGeolocation",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the current geographical location of the remote environment.",
								"returns": "a [[interfaces.Geolocation]] value with latitude and longitude\nspecified using standard WGS84 decimal latitude/longitude. Altitude is\nspecified as meters above the WGS84 ellipsoid. Not all environments\nsupport altitude.\n"
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1596,
										"name": "Geolocation"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 953,
					"name": "getLogsFor",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1533,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 954,
							"name": "getLogsFor",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets all logs from the remote environment of the given type. The logs in\nthe remote environment are cleared once they have been retrieved.",
								"returns": "An array of log entry objects. Timestamps in log entries are\nUnix timestamps, in seconds.\n"
							},
							"parameters": [
								{
									"id": 955,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The type of log entries to retrieve. Available log types\ndiffer between remote environments. Use\n[[Command.Command.getAvailableLogTypes]] to learn what log types are\ncurrently available. Not all environments support all possible log\ntypes.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1600,
											"name": "LogEntry"
										}
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 876,
					"name": "getOrientation",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1261,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 877,
							"name": "getOrientation",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the current screen orientation."
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "portrait"
											},
											{
												"type": "literal",
												"value": "landscape"
											}
										]
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 976,
					"name": "getPageLoadTimeout",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1613,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 977,
							"name": "getPageLoadTimeout",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the timeout for [[Command.Command.get]] calls."
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 867,
					"name": "getPageSource",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1222,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 868,
							"name": "getPageSource",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the HTML loaded in the focused window/frame. This markup is\nserialised by the remote environment so may not exactly match the HTML\nprovided by the Web server."
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 869,
					"name": "getPageTitle",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1230,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 870,
							"name": "getPageTitle",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the title of the top-level browsing context of the current window\nor tab."
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 1014,
					"name": "getPosition",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1795,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 1015,
							"name": "getPosition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the position of the element relative to the top-left corner of the\ndocument, taking into account scrolling and CSS transformations (if they\nare supported)."
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1016,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1017,
													"name": "x",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/Command.ts",
															"line": 1796,
															"character": 38
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1018,
													"name": "y",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/Command.ts",
															"line": 1796,
															"character": 49
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														1017,
														1018
													]
												}
											]
										}
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 1005,
					"name": "getProperty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1763,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 1006,
							"name": "getProperty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets a property of the element.",
								"text": "See [[Element.Element.getAttribute]] to retrieve an element attribute.\n",
								"returns": "The value of the property.\n"
							},
							"typeParameter": [
								{
									"id": 1007,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 1008,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The name of the property."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "reference",
										"name": "T"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 1019,
					"name": "getSize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1803,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 1020,
							"name": "getSize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the size of the element, taking into account CSS transformations\n(if they are supported)."
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1021,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1023,
													"name": "height",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/Command.ts",
															"line": 1804,
															"character": 58
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1022,
													"name": "width",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/Command.ts",
															"line": 1804,
															"character": 42
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														1023,
														1022
													]
												}
											]
										}
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 998,
					"name": "getSpecAttribute",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1738,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 999,
							"name": "getSpecAttribute",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets a property or attribute of the element according to the WebDriver\nspecification algorithm. Use of this method is not recommended; instead,\nuse [[Command.Command.getAttribute]] to retrieve DOM attributes and\n[[Command.Command.getProperty]] to retrieve DOM properties.",
								"text": "This method uses the following algorithm on the server to determine what\nvalue to return:\n\n1. If `name` is 'style', returns the `style.cssText` property of the\n   element.\n2. If the attribute exists and is a boolean attribute, returns 'true' if\n   the attribute is true, or null otherwise.\n3. If the element is an `<option>` element and `name` is 'value',\n   returns the `value` attribute if it exists, otherwise returns the\n   visible text content of the option.\n4. If the element is a checkbox or radio button and `name` is\n   'selected', returns 'true' if the element is checked, or null\n   otherwise.\n5. If the returned value is expected to be a URL (e.g. element is `<a>`\n   and attribute is `href`), returns the fully resolved URL from the\n   `href`/`src` property of the element, not the attribute.\n6. If `name` is 'class', returns the `className` property of the\n   element.\n7. If `name` is 'readonly', returns 'true' if the `readOnly` property is\n   true, or null otherwise.\n8. If `name` corresponds to a property of the element, and the property\n   is not an Object, return the property value coerced to a string.\n9. If `name` corresponds to an attribute of the element, return the\n   attribute value.\n",
								"returns": "The value of the attribute as a string, or `null` if no such\nproperty or attribute exists.\n"
							},
							"parameters": [
								{
									"id": 1000,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The property or attribute name."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "reference",
										"name": "StringResult"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 990,
					"name": "getTagName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1676,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 991,
							"name": "getTagName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the tag name of the element. For HTML documents, the value is\nalways lowercase."
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "reference",
										"name": "StringResult"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 771,
					"name": "getTimeout",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 868,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 772,
							"name": "getTimeout",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the current value of a timeout for the session.",
								"returns": "The timeout, in milliseconds.\n"
							},
							"parameters": [
								{
									"id": 773,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The type of timeout to retrieve. One of 'script',\n'implicit', or 'page load'."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 985,
					"name": "getVisibleText",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1648,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 986,
							"name": "getVisibleText",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the visible text within the element. `<br>` elements are converted\nto line breaks in the returned text, and whitespace is normalised per\nthe usual XML/HTML whitespace normalisation rules."
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "reference",
										"name": "StringResult"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 848,
					"name": "getWindowPosition",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1169,
							"character": 19
						}
					],
					"signatures": [
						{
							"id": 849,
							"name": "getWindowPosition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the position of a window.",
								"text": "Note that this method is not part of the W3C WebDriver standard.\n",
								"returns": "An object describing the position of the window, in CSS pixels,\nrelative to the top-left corner of the primary monitor. If a secondary\nmonitor exists above or to the left of the primary monitor, these values\nwill be negative.\n"
							},
							"parameters": [
								{
									"id": 850,
									"name": "windowHandle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The name of the window to query. See\n[[Command.Command.switchToWindow]] to learn about valid window names.\nOmit this argument to query the currently focused window.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 851,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 852,
													"name": "x",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/Command.ts",
															"line": 1170,
															"character": 38
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 853,
													"name": "y",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/Command.ts",
															"line": 1170,
															"character": 49
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														852,
														853
													]
												}
											]
										}
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 834,
					"name": "getWindowSize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1124,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 835,
							"name": "getWindowSize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the dimensions of a window.",
								"returns": "An object describing the width and height of the window, in CSS\npixels.\n"
							},
							"parameters": [
								{
									"id": 836,
									"name": "_windowHandle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 837,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 839,
													"name": "height",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/Command.ts",
															"line": 1125,
															"character": 58
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 838,
													"name": "width",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/Command.ts",
															"line": 1125,
															"character": 42
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														839,
														838
													]
												}
											]
										}
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 789,
					"name": "goBack",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 928,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 790,
							"name": "goBack",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Navigates the focused window/frame back one page using the browser’s\nnavigation history."
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 787,
					"name": "goForward",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 920,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 788,
							"name": "goForward",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Navigates the focused window/frame forward one page using the browser’s\nnavigation history."
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 1012,
					"name": "isDisplayed",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1786,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 1013,
							"name": "isDisplayed",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns whether or not the element would be visible to an actual user.\nThis means that the following types of elements are considered to be not\ndisplayed:",
								"text": "1. Elements with `display: none`\n2. Elements with `visibility: hidden`\n3. Elements positioned outside of the viewport that cannot be scrolled\n   into view\n4. Elements with `opacity: 0`\n5. Elements with no `offsetWidth` or `offsetHeight`\n"
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 996,
					"name": "isEnabled",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1699,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 997,
							"name": "isEnabled",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns whether or not a form element can be interacted with."
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 809,
					"name": "isImeActivated",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1026,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 810,
							"name": "isImeActivated",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns whether or not an input method editor is currently active in the\nremote environment. As of April 2014, no known remote environments\nsupport IME functions."
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 994,
					"name": "isSelected",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1692,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 995,
							"name": "isSelected",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns whether or not a form element is currently selected (for\ndrop-down options and radio buttons), or whether or not the element is\ncurrently checked (for checkboxes)."
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 935,
					"name": "longTap",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1468,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 936,
							"name": "longTap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs a long-tap gesture on an element.",
								"tags": [
									{
										"tag": "method",
										"text": ""
									}
								]
							},
							"parameters": [
								{
									"id": 937,
									"name": "element",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The element to long-tap.\n"
									},
									"type": {
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 854,
					"name": "maximizeWindow",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1183,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 855,
							"name": "maximizeWindow",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Maximises a window according to the platform’s window system behaviour."
							},
							"parameters": [
								{
									"id": 856,
									"name": "windowHandle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The name of the window to resize. See\n[[Command.Command.switchToWindow] to learn about valid window names.\nOmit this argument to resize the currently focused window.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 920,
					"name": "moveFinger",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1423,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 921,
							"name": "moveFinger",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Moves the last depressed finger to a new point on the touch screen."
							},
							"parameters": [
								{
									"id": 922,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The screen x-coordinate to move to, maybe in device pixels."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 923,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The screen y-coordinate to move to, maybe in device pixels.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 890,
					"name": "moveMouseTo",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1328,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 891,
							"name": "moveMouseTo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Moves the remote environment’s mouse cursor to the specified element or\nrelative position. If the element is outside of the viewport, the remote\ndriver will attempt to scroll it into view automatically."
							},
							"parameters": [
								{
									"id": 892,
									"name": "element",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The element to move the mouse to. If x-offset and\ny-offset are not specified, the mouse will be moved to the centre of the\nelement.\n"
									},
									"type": {
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								},
								{
									"id": 893,
									"name": "xOffset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The x-offset of the cursor, maybe in CSS pixels, relative\nto the left edge of the specified element’s bounding client rectangle.\nIf no element is specified, the offset is relative to the previous\nposition of the mouse, or to the left edge of the page’s root element if\nthe mouse was never moved before.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 894,
									"name": "yOffset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The y-offset of the cursor, maybe in CSS pixels, relative\nto the top edge of the specified element’s bounding client rectangle. If\nno element is specified, the offset is relative to the previous position\nof the mouse, or to the top edge of the page’s root element if the mouse\nwas never moved before.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 895,
							"name": "moveMouseTo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 896,
									"name": "xOffset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 897,
									"name": "yOffset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 912,
					"name": "pressFinger",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1400,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 913,
							"name": "pressFinger",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Depresses a new finger at the given point on a touch screen device\nwithout releasing it."
							},
							"parameters": [
								{
									"id": 914,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The screen x-coordinate to press, maybe in device pixels."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 915,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The screen y-coordinate to press, maybe in device pixels.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 873,
					"name": "pressKeys",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1254,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 874,
							"name": "pressKeys",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Types into the focused window/frame/element."
							},
							"parameters": [
								{
									"id": 875,
									"name": "keys",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The text to type in the remote environment. It is possible\nto type keys that do not have normal character representations (modifier\nkeys, function keys, etc.) as well as keys that have two different\nrepresentations on a typical US-ASCII keyboard (numpad keys); use the\nvalues from [[keys]] to type these special characters. Any modifier keys\nthat are activated by this call will persist until they are deactivated.\nTo deactivate a modifier key, type the same modifier key a second time,\nor send `\\uE000` ('NULL') to deactivate all currently active modifier\nkeys.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 901,
					"name": "pressMouseButton",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1361,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 902,
							"name": "pressMouseButton",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Depresses a mouse button without releasing it."
							},
							"parameters": [
								{
									"id": 903,
									"name": "button",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The button to press. See [[Command.Command.click]] for\navailable options.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 960,
					"name": "quit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1560,
							"character": 6
						}
					],
					"signatures": [
						{
							"id": 961,
							"name": "quit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Terminates the session. No more commands will be accepted by the remote\nafter this point."
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 791,
					"name": "refresh",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 935,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 792,
							"name": "refresh",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Reloads the current browser window/frame."
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 916,
					"name": "releaseFinger",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1413,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 917,
							"name": "releaseFinger",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Releases whatever finger exists at the given point on a touch screen\ndevice."
							},
							"parameters": [
								{
									"id": 918,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The screen x-coordinate where a finger is pressed, maybe in\ndevice pixels."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 919,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The screen y-coordinate where a finger is pressed, maybe in\ndevice pixels.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 904,
					"name": "releaseMouseButton",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1371,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 905,
							"name": "releaseMouseButton",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Releases a previously depressed mouse button."
							},
							"parameters": [
								{
									"id": 906,
									"name": "button",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The button to press. See [[Command.Command.click]] for\navailable options.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 859,
					"name": "setCookie",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1197,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 860,
							"name": "setCookie",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets a cookie on the current page."
							},
							"parameters": [
								{
									"id": 861,
									"name": "cookie",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1604,
										"name": "WebDriverCookie"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 968,
					"name": "setExecuteAsyncTimeout",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1590,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 969,
							"name": "setExecuteAsyncTimeout",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets the timeout for [[Command.Command.executeAsync]] calls."
							},
							"parameters": [
								{
									"id": 970,
									"name": "ms",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The length of the timeout, in milliseconds.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 973,
					"name": "setFindTimeout",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1606,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 974,
							"name": "setFindTimeout",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets the timeout for [[Command.Command.find]] calls."
							},
							"parameters": [
								{
									"id": 975,
									"name": "ms",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The length of the timeout, in milliseconds.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 950,
					"name": "setGeolocation",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1516,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 951,
							"name": "setGeolocation",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets the geographical location of the remote environment."
							},
							"parameters": [
								{
									"id": 952,
									"name": "location",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Latitude and longitude are specified using standard\nWGS84 decimal latitude/longitude. Altitude is specified as meters above\nthe WGS84 ellipsoid. Not all environments support altitude.\n"
									},
									"type": {
										"type": "reference",
										"id": 1596,
										"name": "Geolocation"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 878,
					"name": "setOrientation",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1270,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 879,
							"name": "setOrientation",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets the screen orientation."
							},
							"parameters": [
								{
									"id": 880,
									"name": "orientation",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Either 'portrait' or 'landscape'.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "portrait"
											},
											{
												"type": "literal",
												"value": "landscape"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 978,
					"name": "setPageLoadTimeout",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1622,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 979,
							"name": "setPageLoadTimeout",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets the timeout for [[Command.Command.get]] calls."
							},
							"parameters": [
								{
									"id": 980,
									"name": "ms",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The length of the timeout, in milliseconds.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 774,
					"name": "setTimeout",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 881,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 775,
							"name": "setTimeout",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets the value of a timeout for the session."
							},
							"parameters": [
								{
									"id": 776,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The type of timeout to set. One of 'script', 'implicit', or\n'page load'.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 777,
									"name": "ms",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The length of time to use for the timeout, in milliseconds. A\nvalue of 0 will cause operations to time out immediately.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 840,
					"name": "setWindowPosition",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1145,
							"character": 19
						}
					],
					"signatures": [
						{
							"id": 841,
							"name": "setWindowPosition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets the position of a window.",
								"text": "Note that this method is not part of the W3C WebDriver standard.\n"
							},
							"parameters": [
								{
									"id": 842,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The screen x-coordinate to move to, in CSS pixels, relative to\nthe left edge of the primary monitor.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 843,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The screen y-coordinate to move to, in CSS pixels, relative to\nthe top edge of the primary monitor.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 844,
							"name": "setWindowPosition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 845,
									"name": "windowHandle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 846,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 847,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 826,
					"name": "setWindowSize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1104,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 827,
							"name": "setWindowSize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets the dimensions of a window."
							},
							"parameters": [
								{
									"id": 828,
									"name": "width",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The new width of the window, in CSS pixels.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 829,
									"name": "height",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The new height of the window, in CSS pixels.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 830,
							"name": "setWindowSize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 831,
									"name": "windowHandle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 832,
									"name": "width",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 833,
									"name": "height",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 707,
					"name": "sleep",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 501,
							"character": 7
						}
					],
					"signatures": [
						{
							"id": 708,
							"name": "sleep",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Pauses execution of the next command in the chain for `ms` milliseconds."
							},
							"parameters": [
								{
									"id": 709,
									"name": "ms",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Time to delay, in milliseconds.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 983,
					"name": "submit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1639,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 984,
							"name": "submit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Submits the element, if it is a form, or the form belonging to the\nelement, if it is a form element."
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 816,
					"name": "switchToFrame",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1057,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 817,
							"name": "switchToFrame",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Switches the currently focused frame to a new frame."
							},
							"parameters": [
								{
									"id": 818,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The frame to switch to. In most environments, a number or\nstring value corresponds to a key in the `window.frames` object of the\ncurrently active frame. If `null`, the topmost (default) frame will be\nused. If an Element is provided, it must correspond to a `<frame>` or\n`<iframe>` element.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"id": 475,
												"name": "default"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 822,
					"name": "switchToParentFrame",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1080,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 823,
							"name": "switchToParentFrame",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Switches the currently focused frame to the parent of the currently\nfocused frame."
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 819,
					"name": "switchToWindow",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1072,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 820,
							"name": "switchToWindow",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Switches the currently focused window to a new window.",
								"text": "In environments using the JsonWireProtocol, this value corresponds to\nthe `window.name` property of a window.\n"
							},
							"parameters": [
								{
									"id": 821,
									"name": "handle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The handle of the window to switch to. In mobile\nenvironments and environments based on the W3C WebDriver standard, this\nshould be a handle as returned by\n[[Command.Command.getAllWindowHandles]].\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 803,
					"name": "takeScreenshot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1000,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 804,
							"name": "takeScreenshot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets a screenshot of the focused window and returns it in PNG format."
							},
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "reference",
										"name": "Buffer"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 909,
					"name": "tap",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1389,
							"character": 5
						}
					],
					"signatures": [
						{
							"id": 910,
							"name": "tap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Taps an element on a touch screen device. If the element is outside of\nthe viewport, the remote driver will attempt to scroll it into view\nautomatically."
							},
							"parameters": [
								{
									"id": 911,
									"name": "element",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The element to tap.\n"
									},
									"type": {
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 713,
					"name": "then",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 569,
							"character": 6
						}
					],
					"signatures": [
						{
							"id": 714,
							"name": "then",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Adds a callback to be invoked once the previously chained operation has\ncompleted.",
								"text": "This method is compatible with the `Promise#then` API, with two\nimportant differences:\n\n1. The context (`this`) of the callback is set to the Command object,\n   rather than being `undefined`. This allows promise helpers to be\n   created that can retrieve the appropriate session and element\n   contexts for execution.\n2. A second non-standard `setContext` argument is passed to the\n   callback. This `setContext` function can be called at any time before\n   the callback fulfills its return value and expects either a single\n   [[Element]] or an array of Elements to be provided as its only\n   argument. The provided element(s) will be used as the context for\n   subsequent element method invocations (`click`, etc.). If the\n   `setContext` method is not called, the element context from the\n   parent will be passed through unmodified.\n"
							},
							"typeParameter": [
								{
									"id": 715,
									"name": "U",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "reference",
										"name": "T"
									}
								},
								{
									"id": 716,
									"name": "R",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							],
							"parameters": [
								{
									"id": 717,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 718,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 719,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 720,
																	"name": "value",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "T"
																	}
																},
																{
																	"id": 721,
																	"name": "setContext",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"name": "SetContextMethod"
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"name": "U"
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "U"
																			}
																		],
																		"name": "PromiseLike"
																	}
																]
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 722,
									"name": "errback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 723,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"signatures": [
														{
															"id": 724,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 725,
																	"name": "error",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"name": "R"
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "R"
																			}
																		],
																		"name": "PromiseLike"
																	}
																]
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "U"
											},
											{
												"type": "reference",
												"name": "R"
											}
										]
									},
									{
										"type": "reference",
										"name": "T"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							},
							"implementationOf": {
								"type": "reference",
								"name": "PromiseLike.then"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"name": "PromiseLike.then"
					}
				},
				{
					"id": 924,
					"name": "touchScroll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1442,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 925,
							"name": "touchScroll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Scrolls the currently focused window on a touch screen device."
							},
							"parameters": [
								{
									"id": 926,
									"name": "xOffset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "An optional x-offset, relative to the left edge of the\nelement, in CSS pixels. If no element is specified, the offset is\nrelative to the previous scroll position of the window.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 927,
									"name": "yOffset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "An optional y-offset, relative to the top edge of the\nelement, in CSS pixels. If no element is specified, the offset is\nrelative to the previous scroll position of the window.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						},
						{
							"id": 928,
							"name": "touchScroll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 929,
									"name": "element",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								},
								{
									"id": 930,
									"name": "xOffset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 931,
									"name": "yOffset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 987,
					"name": "type",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1668,
							"character": 6
						}
					],
					"signatures": [
						{
							"id": 988,
							"name": "type",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Types into the element. This method works the same as the\n[[Command.Command.pressKeys]] method except that any modifier keys are\nautomatically released at the end of the command. This method should be\nused instead of [[Command.Command.pressKeys]] to type filenames into\nfile upload fields.",
								"text": "Since 1.5, if the WebDriver server supports remote file uploads, and you\ntype a path to a file on your local computer, that file will be\ntransparently uploaded to the remote server and the remote filename will\nbe typed instead. If you do not want to upload local files, use\n[[Command.Command.pressKeys]] instead.\n"
							},
							"parameters": [
								{
									"id": 989,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The text to type in the remote environment. See\n[[Command.Command.pressKeys]] for more information.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 883,
					"name": "typeInPrompt",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1286,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 884,
							"name": "typeInPrompt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Types into the currently active prompt pop-up."
							},
							"parameters": [
								{
									"id": 885,
									"name": "text",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The text to type into the pop-up’s input box.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							}
						}
					]
				},
				{
					"id": 962,
					"name": "waitForDeleted",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 1574,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 963,
							"name": "waitForDeleted",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Waits for all elements findable in the currently active window/frame\nusing the given strategy and value to be destroyed."
							},
							"parameters": [
								{
									"id": 964,
									"name": "using",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The element retrieval strategy to use. See\n[[Command.Command.find]] for options.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "class name"
											},
											{
												"type": "literal",
												"value": "id"
											},
											{
												"type": "literal",
												"value": "name"
											},
											{
												"type": "literal",
												"value": "partial link text"
											},
											{
												"type": "literal",
												"value": "tag name"
											},
											{
												"type": "literal",
												"value": "css selector"
											},
											{
												"type": "literal",
												"value": "link text"
											},
											{
												"type": "literal",
												"value": "xpath"
											}
										]
									}
								},
								{
									"id": 965,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The strategy-specific value to search for. See\n[[Command.Command.find]] for details.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							},
							"overwrites": {
								"type": "reference",
								"name": "Locator.waitForDeleted"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Locator.waitForDeleted"
					}
				},
				{
					"id": 1096,
					"name": "waitForDeletedByClassName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 276,
							"character": 27
						}
					],
					"signatures": [
						{
							"id": 1097,
							"name": "waitForDeletedByClassName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Waits for all elements inside this element matching the given CSS class\nname to be destroyed."
							},
							"parameters": [
								{
									"id": 1098,
									"name": "className",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The CSS class name to search for.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.waitForDeletedByClassName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.waitForDeletedByClassName"
					}
				},
				{
					"id": 1099,
					"name": "waitForDeletedByCssSelector",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 286,
							"character": 29
						}
					],
					"signatures": [
						{
							"id": 1100,
							"name": "waitForDeletedByCssSelector",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Waits for all elements inside this element matching the given CSS\nselector to be destroyed."
							},
							"parameters": [
								{
									"id": 1101,
									"name": "selector",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The CSS selector to search for.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.waitForDeletedByCssSelector"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.waitForDeletedByCssSelector"
					}
				},
				{
					"id": 1102,
					"name": "waitForDeletedById",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 296,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 1103,
							"name": "waitForDeletedById",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Waits for all elements inside this element matching the given ID to be\ndestroyed."
							},
							"parameters": [
								{
									"id": 1104,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The ID of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.waitForDeletedById"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.waitForDeletedById"
					}
				},
				{
					"id": 1108,
					"name": "waitForDeletedByLinkText",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 316,
							"character": 26
						}
					],
					"signatures": [
						{
							"id": 1109,
							"name": "waitForDeletedByLinkText",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Waits for all elements inside this element matching the given\ncase-insensitive link text to be destroyed."
							},
							"parameters": [
								{
									"id": 1110,
									"name": "text",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The link text of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.waitForDeletedByLinkText"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.waitForDeletedByLinkText"
					}
				},
				{
					"id": 1105,
					"name": "waitForDeletedByName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 306,
							"character": 22
						}
					],
					"signatures": [
						{
							"id": 1106,
							"name": "waitForDeletedByName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Waits for all elements inside this element matching the given name\nattribute to be destroyed."
							},
							"parameters": [
								{
									"id": 1107,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The name of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.waitForDeletedByName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.waitForDeletedByName"
					}
				},
				{
					"id": 1111,
					"name": "waitForDeletedByPartialLinkText",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 326,
							"character": 33
						}
					],
					"signatures": [
						{
							"id": 1112,
							"name": "waitForDeletedByPartialLinkText",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Waits for all elements inside this element partially matching the given\ncase-insensitive link text to be destroyed."
							},
							"parameters": [
								{
									"id": 1113,
									"name": "text",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The partial link text of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.waitForDeletedByPartialLinkText"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.waitForDeletedByPartialLinkText"
					}
				},
				{
					"id": 1114,
					"name": "waitForDeletedByTagName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 336,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 1115,
							"name": "waitForDeletedByTagName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Waits for all elements inside this element matching the given HTML tag\nname to be destroyed."
							},
							"parameters": [
								{
									"id": 1116,
									"name": "tagName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The tag name of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.waitForDeletedByTagName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.waitForDeletedByTagName"
					}
				},
				{
					"id": 1117,
					"name": "waitForDeletedByXpath",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 346,
							"character": 23
						}
					],
					"signatures": [
						{
							"id": 1118,
							"name": "waitForDeletedByXpath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Waits for all elements inside this element matching the given XPath\nselector to be destroyed."
							},
							"parameters": [
								{
									"id": 1119,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The XPath selector to search for.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 663,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"name": "P"
									},
									{
										"type": "reference",
										"name": "StringResult"
									}
								],
								"name": "default"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.waitForDeletedByXpath"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.waitForDeletedByXpath"
					}
				},
				{
					"id": 672,
					"name": "addElementMethod",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 285,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 673,
							"name": "addElementMethod",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Augments `target` with a method that will call `key` on all context\nelements stored within `target`. This can be used to easily add new\nmethods from any custom object that implements the Element API to any\ntarget object that implements the Command API.",
								"text": "Functions that are copied may have the following extra properties in\norder to change the way that Command works with these functions:\n\n* `createsContext` (boolean): If this property is specified, the return\n  value from the function will be used as the new context for the\n  returned Command.\n"
							},
							"typeParameter": [
								{
									"id": 674,
									"name": "Us",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 675,
									"name": "Ps",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 676,
									"name": "Ss",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 677,
									"name": "target",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "reference",
										"id": 663,
										"typeArguments": [
											{
												"type": "reference",
												"name": "Us"
											},
											{
												"type": "reference",
												"name": "Ps"
											},
											{
												"type": "reference",
												"name": "Ss"
											}
										],
										"name": "default"
									}
								},
								{
									"id": 678,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 664,
					"name": "addSessionMethod",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/Command.ts",
							"line": 196,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 665,
							"name": "addSessionMethod",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Augments `target` with a conversion of the `originalFn` method that\nenables its use with a Command object. This can be used to easily add\nnew methods from any custom object that implements the Session API to\nany target object that implements the Command API.",
								"text": "Functions that are copied may have the following extra properties in\norder to change the way that Command works with these functions:\n\n* `createsContext` (boolean): If this property is specified, the return\n  value from the function will be used as the new context for the\n  returned Command.\n* `usesElement` (boolean): If this property is specified, element(s)\n  from the current context will be used as the first argument to the\n  function, if the explicitly specified first argument is not already an\n  element.\n"
							},
							"typeParameter": [
								{
									"id": 666,
									"name": "Us",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 667,
									"name": "Ps",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								},
								{
									"id": 668,
									"name": "Ss",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 669,
									"name": "target",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "reference",
										"id": 663,
										"typeArguments": [
											{
												"type": "reference",
												"name": "Us"
											},
											{
												"type": "reference",
												"name": "Ps"
											},
											{
												"type": "reference",
												"name": "Ss"
											}
										],
										"name": "default"
									}
								},
								{
									"id": 670,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 671,
									"name": "originalFn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "\n"
									},
									"type": {
										"type": "reference",
										"name": "Function"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						679
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						703,
						699,
						705,
						701
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						886,
						813,
						738,
						726,
						862,
						992,
						981,
						898,
						824,
						811,
						864,
						888,
						907,
						932,
						710,
						1009,
						793,
						798,
						733,
						740,
						744,
						1051,
						1054,
						1060,
						1057,
						1063,
						1066,
						1069,
						1027,
						1030,
						1033,
						1039,
						1036,
						1042,
						1045,
						1048,
						748,
						1072,
						1075,
						1078,
						1084,
						1081,
						1087,
						1090,
						1093,
						938,
						784,
						871,
						807,
						881,
						780,
						958,
						1001,
						805,
						956,
						1024,
						857,
						782,
						778,
						966,
						971,
						948,
						953,
						876,
						976,
						867,
						869,
						1014,
						1005,
						1019,
						998,
						990,
						771,
						985,
						848,
						834,
						789,
						787,
						1012,
						996,
						809,
						994,
						935,
						854,
						920,
						890,
						912,
						873,
						901,
						960,
						791,
						916,
						904,
						859,
						968,
						973,
						950,
						878,
						978,
						774,
						840,
						826,
						707,
						983,
						816,
						822,
						819,
						803,
						909,
						713,
						924,
						987,
						883,
						962,
						1096,
						1099,
						1102,
						1108,
						1105,
						1111,
						1114,
						1117,
						672,
						664
					]
				}
			],
			"sources": [
				{
					"fileName": "src/Command.ts",
					"line": 160,
					"character": 28
				}
			],
			"typeParameter": [
				{
					"id": 1120,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				},
				{
					"id": 1121,
					"name": "P",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 1122,
					"name": "StringResult",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 663,
							"typeArguments": [
								{
									"type": "reference",
									"id": 475,
									"name": "Element"
								},
								{
									"type": "reference",
									"name": "P"
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							],
							"name": "Command"
						},
						{
							"type": "reference",
							"id": 663,
							"typeArguments": [
								{
									"type": "array",
									"elementType": {
										"type": "reference",
										"id": 475,
										"name": "Element"
									}
								},
								{
									"type": "reference",
									"name": "P"
								},
								{
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"name": "Command"
						},
						{
							"type": "reference",
							"id": 663,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "void"
								},
								{
									"type": "reference",
									"name": "P"
								},
								{
									"type": "reference",
									"name": "StringResult"
								}
							],
							"name": "Command"
						}
					],
					"name": "Locator"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"name": "T"
						}
					],
					"name": "PromiseLike"
				}
			]
		},
		{
			"id": 475,
			"name": "Element",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "The Element class represents a DOM or UI element within the remote\nenvironment."
			},
			"children": [
				{
					"id": 476,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 477,
							"name": "new Element",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {},
							"parameters": [
								{
									"id": 478,
									"name": "elementId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "\nThe ID of the element, as provided by the remote.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 479,
									"name": "session",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "\nThe session that the element belongs to.\n"
									},
									"type": {
										"type": "reference",
										"id": 63,
										"name": "default"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 475,
								"name": "default"
							},
							"overwrites": {
								"type": "reference",
								"name": "Locator<\n  CancellablePromise<Element>,\n  CancellablePromise<Element[]>,\n  CancellablePromise<void>\n>.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Locator<\n  CancellablePromise<Element>,\n  CancellablePromise<Element[]>,\n  CancellablePromise<void>\n>.constructor"
					}
				},
				{
					"id": 482,
					"name": "elementId",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "The opaque, remote-provided ID of the element.",
						"tags": [
							{
								"tag": "member",
								"text": "elementId"
							},
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/Element.ts",
							"line": 49,
							"character": 15
						}
					],
					"getSignature": [
						{
							"id": 483,
							"name": "elementId",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "The opaque, remote-provided ID of the element.",
								"tags": [
									{
										"tag": "member",
										"text": "elementId"
									},
									{
										"tag": "readonly",
										"text": "\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 484,
					"name": "session",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "The [[Session]] that the element belongs to.",
						"tags": [
							{
								"tag": "readonly",
								"text": "\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/Element.ts",
							"line": 57,
							"character": 13
						}
					],
					"getSignature": [
						{
							"id": 485,
							"name": "session",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "The [[Session]] that the element belongs to.",
								"tags": [
									{
										"tag": "readonly",
										"text": "\n"
									}
								]
							},
							"type": {
								"type": "reference",
								"id": 63,
								"name": "default"
							}
						}
					]
				},
				{
					"id": 528,
					"name": "clearValue",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Element.ts",
							"line": 420,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 529,
							"name": "clearValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Clears the value of a form element."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 517,
					"name": "click",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Element.ts",
							"line": 244,
							"character": 7
						}
					],
					"signatures": [
						{
							"id": 518,
							"name": "click",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Clicks the element. This method works on both mouse and touch platforms."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 544,
					"name": "equals",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Element.ts",
							"line": 564,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 545,
							"name": "equals",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Determines if this element is equal to another element."
							},
							"parameters": [
								{
									"id": 546,
									"name": "other",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 509,
					"name": "find",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Element.ts",
							"line": 141,
							"character": 6
						}
					],
					"signatures": [
						{
							"id": 510,
							"name": "find",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first element within this element that matches the given query.",
								"text": "See [[Session.Session.setFindTimeout]] to set the amount of time it the\nremote environment should spend waiting for an element that does not\nexist at the time of the `find` call before timing out.\n"
							},
							"parameters": [
								{
									"id": 511,
									"name": "using",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The element retrieval strategy to use. See\n[[Session.Session.find]] for options.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "class name"
											},
											{
												"type": "literal",
												"value": "id"
											},
											{
												"type": "literal",
												"value": "name"
											},
											{
												"type": "literal",
												"value": "partial link text"
											},
											{
												"type": "literal",
												"value": "tag name"
											},
											{
												"type": "literal",
												"value": "css selector"
											},
											{
												"type": "literal",
												"value": "link text"
											},
											{
												"type": "literal",
												"value": "xpath"
											}
										]
									}
								},
								{
									"id": 512,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The strategy-specific value to search for. See\n[[Session.Session.find]] for details.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								],
								"name": "CancellablePromise"
							},
							"overwrites": {
								"type": "reference",
								"name": "Locator.find"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Locator.find"
					}
				},
				{
					"id": 513,
					"name": "findAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Element.ts",
							"line": 205,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 514,
							"name": "findAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets all elements within this element that match the given query."
							},
							"parameters": [
								{
									"id": 515,
									"name": "using",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The element retrieval strategy to use. See\n[[Session.Session.find]] for options.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "class name"
											},
											{
												"type": "literal",
												"value": "id"
											},
											{
												"type": "literal",
												"value": "name"
											},
											{
												"type": "literal",
												"value": "partial link text"
											},
											{
												"type": "literal",
												"value": "tag name"
											},
											{
												"type": "literal",
												"value": "css selector"
											},
											{
												"type": "literal",
												"value": "link text"
											},
											{
												"type": "literal",
												"value": "xpath"
											}
										]
									}
								},
								{
									"id": 516,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The strategy-specific value to search for. See\n[[Session.Session.find]] for details.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 475,
											"name": "default"
										}
									}
								],
								"name": "CancellablePromise"
							},
							"overwrites": {
								"type": "reference",
								"name": "Locator.findAll"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Locator.findAll"
					}
				},
				{
					"id": 594,
					"name": "findAllByClassName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 106,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 595,
							"name": "findAllByClassName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets all elements inside this element matching the given CSS class name."
							},
							"parameters": [
								{
									"id": 596,
									"name": "className",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The CSS class name to search for.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 475,
											"name": "default"
										}
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findAllByClassName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findAllByClassName"
					}
				},
				{
					"id": 597,
					"name": "findAllByCssSelector",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 115,
							"character": 22
						}
					],
					"signatures": [
						{
							"id": 598,
							"name": "findAllByCssSelector",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets all elements inside this element matching the given CSS selector."
							},
							"parameters": [
								{
									"id": 599,
									"name": "selector",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The CSS selector to search for.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 475,
											"name": "default"
										}
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findAllByCssSelector"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findAllByCssSelector"
					}
				},
				{
					"id": 603,
					"name": "findAllByLinkText",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 134,
							"character": 19
						}
					],
					"signatures": [
						{
							"id": 604,
							"name": "findAllByLinkText",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets all elements inside this element matching the given\ncase-insensitive link text."
							},
							"parameters": [
								{
									"id": 605,
									"name": "text",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The link text of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 475,
											"name": "default"
										}
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findAllByLinkText"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findAllByLinkText"
					}
				},
				{
					"id": 600,
					"name": "findAllByName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 124,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 601,
							"name": "findAllByName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets all elements inside this element matching the given name attribute."
							},
							"parameters": [
								{
									"id": 602,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The name of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 475,
											"name": "default"
										}
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findAllByName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findAllByName"
					}
				},
				{
					"id": 606,
					"name": "findAllByPartialLinkText",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 144,
							"character": 26
						}
					],
					"signatures": [
						{
							"id": 607,
							"name": "findAllByPartialLinkText",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets all elements inside this element partially matching the given\ncase-insensitive link text."
							},
							"parameters": [
								{
									"id": 608,
									"name": "text",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The partial link text of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 475,
											"name": "default"
										}
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findAllByPartialLinkText"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findAllByPartialLinkText"
					}
				},
				{
					"id": 609,
					"name": "findAllByTagName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 153,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 610,
							"name": "findAllByTagName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets all elements inside this element matching the given HTML tag name."
							},
							"parameters": [
								{
									"id": 611,
									"name": "tagName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The tag name of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 475,
											"name": "default"
										}
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findAllByTagName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findAllByTagName"
					}
				},
				{
					"id": 612,
					"name": "findAllByXpath",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 162,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 613,
							"name": "findAllByXpath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets all elements inside this element matching the given XPath selector."
							},
							"parameters": [
								{
									"id": 614,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The XPath selector to search for.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 475,
											"name": "default"
										}
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findAllByXpath"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findAllByXpath"
					}
				},
				{
					"id": 570,
					"name": "findByClassName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 28,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 571,
							"name": "findByClassName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first element inside this element matching the given CSS class\nname."
							},
							"parameters": [
								{
									"id": 572,
									"name": "className",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The CSS class name to search for.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findByClassName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findByClassName"
					}
				},
				{
					"id": 573,
					"name": "findByCssSelector",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 38,
							"character": 19
						}
					],
					"signatures": [
						{
							"id": 574,
							"name": "findByCssSelector",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first element inside this element matching the given CSS\nselector."
							},
							"parameters": [
								{
									"id": 575,
									"name": "selector",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The CSS selector to search for.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findByCssSelector"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findByCssSelector"
					}
				},
				{
					"id": 576,
					"name": "findById",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 47,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 577,
							"name": "findById",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first element inside this element matching the given ID."
							},
							"parameters": [
								{
									"id": 578,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The ID of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findById"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findById"
					}
				},
				{
					"id": 582,
					"name": "findByLinkText",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 67,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 583,
							"name": "findByLinkText",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first element inside this element matching the given\ncase-insensitive link text."
							},
							"parameters": [
								{
									"id": 584,
									"name": "text",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The link text of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findByLinkText"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findByLinkText"
					}
				},
				{
					"id": 579,
					"name": "findByName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 57,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 580,
							"name": "findByName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first element inside this element matching the given name\nattribute."
							},
							"parameters": [
								{
									"id": 581,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The name of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findByName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findByName"
					}
				},
				{
					"id": 585,
					"name": "findByPartialLinkText",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 77,
							"character": 23
						}
					],
					"signatures": [
						{
							"id": 586,
							"name": "findByPartialLinkText",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first element inside this element partially matching the given\ncase-insensitive link text."
							},
							"parameters": [
								{
									"id": 587,
									"name": "text",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The partial link text of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findByPartialLinkText"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findByPartialLinkText"
					}
				},
				{
					"id": 588,
					"name": "findByTagName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 87,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 589,
							"name": "findByTagName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first element inside this element matching the given HTML tag\nname."
							},
							"parameters": [
								{
									"id": 590,
									"name": "tagName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The tag name of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findByTagName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findByTagName"
					}
				},
				{
					"id": 591,
					"name": "findByXpath",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 97,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 592,
							"name": "findByXpath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first element inside this element matching the given XPath\nselector."
							},
							"parameters": [
								{
									"id": 593,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The XPath selector to search for.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findByXpath"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findByXpath"
					}
				},
				{
					"id": 562,
					"name": "findDisplayed",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Element.ts",
							"line": 785,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 563,
							"name": "findDisplayed",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first [[Element.Element.isDisplayed|displayed]] element inside\nthis element matching the given query. This is inherently slower than\n[[Element.Element.find]], so should only be used in cases where the\nvisibility of an element cannot be ensured in advance.",
								"tags": [
									{
										"tag": "since",
										"text": "1.6\n"
									}
								]
							},
							"parameters": [
								{
									"id": 564,
									"name": "using",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The element retrieval strategy to use. See\n[[Session.Session.find]] for options.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "class name"
											},
											{
												"type": "literal",
												"value": "id"
											},
											{
												"type": "literal",
												"value": "name"
											},
											{
												"type": "literal",
												"value": "partial link text"
											},
											{
												"type": "literal",
												"value": "tag name"
											},
											{
												"type": "literal",
												"value": "css selector"
											},
											{
												"type": "literal",
												"value": "link text"
											},
											{
												"type": "literal",
												"value": "xpath"
											}
										]
									}
								},
								{
									"id": 565,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The strategy-specific value to search for. See\n[[Session.Session.find]] for details.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								],
								"name": "CancellablePromise"
							},
							"overwrites": {
								"type": "reference",
								"name": "Locator.findDisplayed"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Locator.findDisplayed"
					}
				},
				{
					"id": 615,
					"name": "findDisplayedByClassName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 175,
							"character": 26
						}
					],
					"signatures": [
						{
							"id": 616,
							"name": "findDisplayedByClassName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first [[Element.isDisplayed|displayed]] element inside this\nelement matching the given CSS class name. This is inherently slower\nthan [[Element.find]], so should only be used in cases where the\nvisibility of an element cannot be ensured in advance.",
								"tags": [
									{
										"tag": "since",
										"text": "1.6"
									}
								]
							},
							"parameters": [
								{
									"id": 617,
									"name": "className",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The CSS class name to search for.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findDisplayedByClassName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findDisplayedByClassName"
					}
				},
				{
					"id": 618,
					"name": "findDisplayedByCssSelector",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 188,
							"character": 28
						}
					],
					"signatures": [
						{
							"id": 619,
							"name": "findDisplayedByCssSelector",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first [[Element.isDisplayed|displayed]] element inside this\nelement matching the given CSS selector. This is inherently slower than\n[[Element.find]], so should only be used in cases where the visibility\nof an element cannot be ensured in advance.",
								"tags": [
									{
										"tag": "since",
										"text": "1.6"
									}
								]
							},
							"parameters": [
								{
									"id": 620,
									"name": "selector",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The CSS selector to search for.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findDisplayedByCssSelector"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findDisplayedByCssSelector"
					}
				},
				{
					"id": 621,
					"name": "findDisplayedById",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 201,
							"character": 19
						}
					],
					"signatures": [
						{
							"id": 622,
							"name": "findDisplayedById",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first [[Element.isDisplayed|displayed]] element inside this\nelement matching the given ID. This is inherently slower than\n[[Element.find]], so should only be used in cases where the visibility\nof an element cannot be ensured in advance.",
								"tags": [
									{
										"tag": "since",
										"text": "1.6"
									}
								]
							},
							"parameters": [
								{
									"id": 623,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The ID of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findDisplayedById"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findDisplayedById"
					}
				},
				{
					"id": 627,
					"name": "findDisplayedByLinkText",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 227,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 628,
							"name": "findDisplayedByLinkText",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first [[Element.isDisplayed|displayed]] element inside this\nelement matching the given case-insensitive link text. This is\ninherently slower than [[Element.find]], so should only be used in cases\nwhere the visibility of an element cannot be ensured in advance.",
								"tags": [
									{
										"tag": "since",
										"text": "1.6"
									}
								]
							},
							"parameters": [
								{
									"id": 629,
									"name": "text",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The link text of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findDisplayedByLinkText"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findDisplayedByLinkText"
					}
				},
				{
					"id": 624,
					"name": "findDisplayedByName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 214,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 625,
							"name": "findDisplayedByName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first [[Element.isDisplayed|displayed]] element inside this\nelement matching the given name attribute. This is inherently slower\nthan [[Element.find]], so should only be used in cases where the\nvisibility of an element cannot be ensured in advance.",
								"tags": [
									{
										"tag": "since",
										"text": "1.6"
									}
								]
							},
							"parameters": [
								{
									"id": 626,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The name of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findDisplayedByName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findDisplayedByName"
					}
				},
				{
					"id": 630,
					"name": "findDisplayedByPartialLinkText",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 240,
							"character": 32
						}
					],
					"signatures": [
						{
							"id": 631,
							"name": "findDisplayedByPartialLinkText",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first [[Element.isDisplayed|displayed]] element inside this\nelement partially matching the given case-insensitive link text. This is\ninherently slower than [[Element.find]], so should only be used in cases\nwhere the visibility of an element cannot be ensured in advance.",
								"tags": [
									{
										"tag": "since",
										"text": "1.6"
									}
								]
							},
							"parameters": [
								{
									"id": 632,
									"name": "text",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The partial link text of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findDisplayedByPartialLinkText"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findDisplayedByPartialLinkText"
					}
				},
				{
					"id": 633,
					"name": "findDisplayedByTagName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 253,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 634,
							"name": "findDisplayedByTagName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first [[Element.isDisplayed|displayed]] element inside this\nelement matching the given HTML tag name. This is inherently slower than\n[[Element.find]], so should only be used in cases where the visibility\nof an element cannot be ensured in advance.",
								"tags": [
									{
										"tag": "since",
										"text": "1.6"
									}
								]
							},
							"parameters": [
								{
									"id": 635,
									"name": "tagName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The tag name of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findDisplayedByTagName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findDisplayedByTagName"
					}
				},
				{
					"id": 636,
					"name": "findDisplayedByXpath",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 266,
							"character": 22
						}
					],
					"signatures": [
						{
							"id": 637,
							"name": "findDisplayedByXpath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first [[Element.isDisplayed|displayed]] element inside this\nelement matching the given XPath selector. This is inherently slower\nthan [[Element.find]], so should only be used in cases where the\nvisibility of an element cannot be ensured in advance.",
								"tags": [
									{
										"tag": "since",
										"text": "1.6"
									}
								]
							},
							"parameters": [
								{
									"id": 638,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The XPath selector to search for.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findDisplayedByXpath"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findDisplayedByXpath"
					}
				},
				{
					"id": 537,
					"name": "getAttribute",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Element.ts",
							"line": 528,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 538,
							"name": "getAttribute",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets an attribute of the element.",
								"text": "See [[Element.Element.getProperty]] to retrieve an element property.\n",
								"returns": "The value of the attribute, or `null` if no such attribute\nexists.\n"
							},
							"parameters": [
								{
									"id": 539,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The name of the attribute."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 559,
					"name": "getComputedStyle",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Element.ts",
							"line": 719,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 560,
							"name": "getComputedStyle",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets a CSS computed property value for the element."
							},
							"parameters": [
								{
									"id": 561,
									"name": "propertyName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The CSS property to retrieve. This argument must be\nhyphenated, *not* camel-case.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 549,
					"name": "getPosition",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Element.ts",
							"line": 641,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 550,
							"name": "getPosition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the position of the element relative to the top-left corner of the\ndocument, taking into account scrolling and CSS transformations (if they\nare supported)."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 551,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 552,
													"name": "x",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/Element.ts",
															"line": 641,
															"character": 39
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 553,
													"name": "y",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/Element.ts",
															"line": 641,
															"character": 50
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														552,
														553
													]
												}
											]
										}
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 540,
					"name": "getProperty",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Element.ts",
							"line": 547,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 541,
							"name": "getProperty",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets a property of the element.",
								"text": "See [[Element.Element.getAttribute]] to retrieve an element attribute.\n",
								"returns": "The value of the property.\n"
							},
							"typeParameter": [
								{
									"id": 542,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 543,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The name of the property."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"name": "T"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 554,
					"name": "getSize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Element.ts",
							"line": 675,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 555,
							"name": "getSize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the size of the element, taking into account CSS transformations\n(if they are supported)."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 556,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 558,
													"name": "height",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/Element.ts",
															"line": 675,
															"character": 55
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 557,
													"name": "width",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/Element.ts",
															"line": 675,
															"character": 39
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														558,
														557
													]
												}
											]
										}
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 534,
					"name": "getSpecAttribute",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Element.ts",
							"line": 483,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 535,
							"name": "getSpecAttribute",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets a property or attribute of the element according to the WebDriver\nspecification algorithm. Use of this method is not recommended; instead,\nuse [[Element.Element.getAttribute]] to retrieve DOM attributes and\n[[Element.Element.getProperty]] to retrieve DOM properties.",
								"text": "This method uses the following algorithm on the server to determine what\nvalue to return:\n\n1. If `name` is 'style', returns the `style.cssText` property of the\n   element.\n2. If the attribute exists and is a boolean attribute, returns 'true' if\n   the attribute is true, or null otherwise.\n3. If the element is an `<option>` element and `name` is 'value',\n   returns the `value` attribute if it exists, otherwise returns the\n   visible text content of the option.\n4. If the element is a checkbox or radio button and `name` is\n   'selected', returns 'true' if the element is checked, or null\n   otherwise.\n5. If the returned value is expected to be a URL (e.g. element is `<a>`\n   and attribute is `href`), returns the fully resolved URL from the\n   `href`/`src` property of the element, not the attribute.\n6. If `name` is 'class', returns the `className` property of the\n   element.\n7. If `name` is 'readonly', returns 'true' if the `readOnly` property is\n   true, or null otherwise.\n8. If `name` corresponds to a property of the element, and the property\n   is not an Object, return the property value coerced to a string.\n9. If `name` corresponds to an attribute of the element, return the\n   attribute value.\n",
								"returns": "The value of the attribute as a string, or `null` if no such\nproperty or attribute exists.\n"
							},
							"parameters": [
								{
									"id": 536,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The property or attribute name."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 526,
					"name": "getTagName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Element.ts",
							"line": 401,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 527,
							"name": "getTagName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the tag name of the element. For HTML documents, the value is\nalways lowercase."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 521,
					"name": "getVisibleText",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Element.ts",
							"line": 305,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 522,
							"name": "getVisibleText",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the visible text within the element. `<br>` elements are converted\nto line breaks in the returned text, and whitespace is normalised per\nthe usual XML/HTML whitespace normalisation rules."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 547,
					"name": "isDisplayed",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Element.ts",
							"line": 600,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 548,
							"name": "isDisplayed",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns whether or not the element would be visible to an actual user.\nThis means that the following types of elements are considered to be not\ndisplayed:",
								"text": "1. Elements with `display: none`\n2. Elements with `visibility: hidden`\n3. Elements positioned outside of the viewport that cannot be scrolled\n   into view\n4. Elements with `opacity: 0`\n5. Elements with no `offsetWidth` or `offsetHeight`\n"
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 532,
					"name": "isEnabled",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Element.ts",
							"line": 436,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 533,
							"name": "isEnabled",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns whether or not a form element can be interacted with."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 530,
					"name": "isSelected",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Element.ts",
							"line": 429,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 531,
							"name": "isSelected",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns whether or not a form element is currently selected (for\ndrop-down options and radio buttons), or whether or not the element is\ncurrently checked (for checkboxes)."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 519,
					"name": "submit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Element.ts",
							"line": 283,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 520,
							"name": "submit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Submits the element, if it is a form, or the form belonging to the\nelement, if it is a form element."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 498,
					"name": "toJSON",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Element.ts",
							"line": 79,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 499,
							"name": "toJSON",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 500,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 501,
											"name": "ELEMENT",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										},
										{
											"id": 502,
											"name": "element-6066-11e4-a52e-4f735466cecf",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"kind": 1024,
											"children": [
												501,
												502
											]
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 523,
					"name": "type",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Element.ts",
							"line": 340,
							"character": 6
						}
					],
					"signatures": [
						{
							"id": 524,
							"name": "type",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Types into the element. This method works the same as the\n[[Session.Session.pressKeys]] method except that any modifier keys are\nautomatically released at the end of the command. This method should be\nused instead of [[Session.Session.pressKeys]] to type filenames into\nfile upload fields.",
								"text": "Since 1.5, if the WebDriver server supports remote file uploads, and you\ntype a path to a file on your local computer, that file will be\ntransparently uploaded to the remote server and the remote filename will\nbe typed instead. If you do not want to upload local files, use\n[[Session.Session.pressKeys]] instead.\n"
							},
							"parameters": [
								{
									"id": 525,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The text to type in the remote environment. See\n[[Session.Session.pressKeys]] for more information.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 566,
					"name": "waitForDeleted",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Element.ts",
							"line": 799,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 567,
							"name": "waitForDeleted",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Waits for all elements inside this element that match the given query to\nbe destroyed."
							},
							"parameters": [
								{
									"id": 568,
									"name": "strategy",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "class name"
											},
											{
												"type": "literal",
												"value": "id"
											},
											{
												"type": "literal",
												"value": "name"
											},
											{
												"type": "literal",
												"value": "partial link text"
											},
											{
												"type": "literal",
												"value": "tag name"
											},
											{
												"type": "literal",
												"value": "css selector"
											},
											{
												"type": "literal",
												"value": "link text"
											},
											{
												"type": "literal",
												"value": "xpath"
											}
										]
									}
								},
								{
									"id": 569,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The strategy-specific value to search for. See\n[[Session.Session.find]] for details.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"overwrites": {
								"type": "reference",
								"name": "Locator.waitForDeleted"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Locator.waitForDeleted"
					}
				},
				{
					"id": 639,
					"name": "waitForDeletedByClassName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 276,
							"character": 27
						}
					],
					"signatures": [
						{
							"id": 640,
							"name": "waitForDeletedByClassName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Waits for all elements inside this element matching the given CSS class\nname to be destroyed."
							},
							"parameters": [
								{
									"id": 641,
									"name": "className",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The CSS class name to search for.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.waitForDeletedByClassName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.waitForDeletedByClassName"
					}
				},
				{
					"id": 642,
					"name": "waitForDeletedByCssSelector",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 286,
							"character": 29
						}
					],
					"signatures": [
						{
							"id": 643,
							"name": "waitForDeletedByCssSelector",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Waits for all elements inside this element matching the given CSS\nselector to be destroyed."
							},
							"parameters": [
								{
									"id": 644,
									"name": "selector",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The CSS selector to search for.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.waitForDeletedByCssSelector"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.waitForDeletedByCssSelector"
					}
				},
				{
					"id": 645,
					"name": "waitForDeletedById",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 296,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 646,
							"name": "waitForDeletedById",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Waits for all elements inside this element matching the given ID to be\ndestroyed."
							},
							"parameters": [
								{
									"id": 647,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The ID of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.waitForDeletedById"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.waitForDeletedById"
					}
				},
				{
					"id": 651,
					"name": "waitForDeletedByLinkText",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 316,
							"character": 26
						}
					],
					"signatures": [
						{
							"id": 652,
							"name": "waitForDeletedByLinkText",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Waits for all elements inside this element matching the given\ncase-insensitive link text to be destroyed."
							},
							"parameters": [
								{
									"id": 653,
									"name": "text",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The link text of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.waitForDeletedByLinkText"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.waitForDeletedByLinkText"
					}
				},
				{
					"id": 648,
					"name": "waitForDeletedByName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 306,
							"character": 22
						}
					],
					"signatures": [
						{
							"id": 649,
							"name": "waitForDeletedByName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Waits for all elements inside this element matching the given name\nattribute to be destroyed."
							},
							"parameters": [
								{
									"id": 650,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The name of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.waitForDeletedByName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.waitForDeletedByName"
					}
				},
				{
					"id": 654,
					"name": "waitForDeletedByPartialLinkText",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 326,
							"character": 33
						}
					],
					"signatures": [
						{
							"id": 655,
							"name": "waitForDeletedByPartialLinkText",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Waits for all elements inside this element partially matching the given\ncase-insensitive link text to be destroyed."
							},
							"parameters": [
								{
									"id": 656,
									"name": "text",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The partial link text of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.waitForDeletedByPartialLinkText"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.waitForDeletedByPartialLinkText"
					}
				},
				{
					"id": 657,
					"name": "waitForDeletedByTagName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 336,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 658,
							"name": "waitForDeletedByTagName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Waits for all elements inside this element matching the given HTML tag\nname to be destroyed."
							},
							"parameters": [
								{
									"id": 659,
									"name": "tagName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The tag name of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.waitForDeletedByTagName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.waitForDeletedByTagName"
					}
				},
				{
					"id": 660,
					"name": "waitForDeletedByXpath",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 346,
							"character": 23
						}
					],
					"signatures": [
						{
							"id": 661,
							"name": "waitForDeletedByXpath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Waits for all elements inside this element matching the given XPath\nselector to be destroyed."
							},
							"parameters": [
								{
									"id": 662,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The XPath selector to search for.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.waitForDeletedByXpath"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.waitForDeletedByXpath"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						476
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						482,
						484
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						528,
						517,
						544,
						509,
						513,
						594,
						597,
						603,
						600,
						606,
						609,
						612,
						570,
						573,
						576,
						582,
						579,
						585,
						588,
						591,
						562,
						615,
						618,
						621,
						627,
						624,
						630,
						633,
						636,
						537,
						559,
						549,
						540,
						554,
						534,
						526,
						521,
						547,
						532,
						530,
						519,
						498,
						523,
						566,
						639,
						642,
						645,
						651,
						648,
						654,
						657,
						660
					]
				}
			],
			"sources": [
				{
					"fileName": "src/Element.ts",
					"line": 15,
					"character": 28
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 1476,
							"typeArguments": [
								{
									"type": "reference",
									"id": 475,
									"name": "Element"
								}
							],
							"name": "CancellablePromise"
						},
						{
							"type": "reference",
							"id": 1476,
							"typeArguments": [
								{
									"type": "array",
									"elementType": {
										"type": "reference",
										"id": 475,
										"name": "Element"
									}
								}
							],
							"name": "CancellablePromise"
						},
						{
							"type": "reference",
							"id": 1476,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "void"
								}
							],
							"name": "CancellablePromise"
						}
					],
					"name": "Locator"
				}
			]
		},
		{
			"id": 1,
			"name": "Server",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"children": [
				{
					"id": 2,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 3,
							"name": "new Server",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "The Server class represents a remote HTTP server implementing the\nWebDriver wire protocol that can be used to generate new remote control\nsessions."
							},
							"parameters": [
								{
									"id": 4,
									"name": "url",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The fully qualified URL to the JsonWireProtocol endpoint on\nthe server. The default endpoint for a JsonWireProtocol HTTP server is\nhttp://localhost:4444/wd/hub. You may also pass a parsed URL object\nwhich will be converted to a string."
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"id": 1611,
												"name": "LeadfootURL"
											}
										]
									}
								},
								{
									"id": 5,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "Additional request options to be used for requests to the\nserver.\n"
									},
									"type": {
										"type": "reference",
										"id": 1455,
										"name": "RequestOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1,
								"name": "default"
							}
						}
					]
				},
				{
					"id": 9,
					"name": "fixSessionCapabilities",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Whether or not to detect and/or correct environment capabilities when\ncreating a new Server. If the value is \"no-detect\", capabilities will be\nupdated with already-known features and defects based on the platform, but\nno tests will be run."
					},
					"sources": [
						{
							"fileName": "src/Server.ts",
							"line": 38,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "no-detect"
							}
						]
					},
					"defaultValue": "true"
				},
				{
					"id": 7,
					"name": "requestOptions",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Server.ts",
							"line": 24,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"id": 1455,
						"name": "RequestOptions"
					}
				},
				{
					"id": 8,
					"name": "sessionConstructor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "An alternative session constructor. Defaults to the standard [[Session]]\nconstructor if one is not provided."
					},
					"sources": [
						{
							"fileName": "src/Server.ts",
							"line": 30,
							"character": 20
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"id": 63,
							"name": "default"
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 6,
					"name": "url",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Server.ts",
							"line": 22,
							"character": 5
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 39,
					"name": "createSession",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Server.ts",
							"line": 433,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 40,
							"name": "createSession",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Creates a new remote control session on the remote server."
							},
							"typeParameter": [
								{
									"id": 41,
									"name": "S",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 63,
										"typeArguments": [
											{
												"type": "reference",
												"name": "S"
											}
										],
										"name": "default"
									},
									"default": {
										"type": "reference",
										"id": 63,
										"name": "default"
									}
								}
							],
							"parameters": [
								{
									"id": 42,
									"name": "desiredCapabilities",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "A hash map of desired capabilities of the\nremote environment. The server may return an environment that does not\nmatch all the desired capabilities if one is not available.\n"
									},
									"type": {
										"type": "reference",
										"id": 1505,
										"name": "Capabilities"
									}
								},
								{
									"id": 43,
									"name": "requiredCapabilities",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "A hash map of required capabilities of the\nremote environment. The server will not return an environment that does\nnot match all the required capabilities if one is not available.\n"
									},
									"type": {
										"type": "reference",
										"id": 1505,
										"name": "Capabilities"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"name": "S"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 31,
					"name": "delete",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Server.ts",
							"line": 404,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 32,
							"name": "delete",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 33,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 34,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35,
									"name": "requestData",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "Object"
									}
								},
								{
									"id": 36,
									"name": "pathParts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"name": "T"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 60,
					"name": "deleteSession",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Server.ts",
							"line": 1951,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 61,
							"name": "deleteSession",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Terminates a session on the server."
							},
							"parameters": [
								{
									"id": 62,
									"name": "sessionId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 19,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Server.ts",
							"line": 388,
							"character": 5
						}
					],
					"signatures": [
						{
							"id": 20,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 21,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 22,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 23,
									"name": "requestData",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "Object"
									}
								},
								{
									"id": 24,
									"name": "pathParts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"name": "T"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 57,
					"name": "getSessionCapabilities",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Server.ts",
							"line": 1944,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 58,
							"name": "getSessionCapabilities",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets information on the capabilities of a given session from the server.\nThe list of capabilities returned by this command will not include any\nof the extra session capabilities detected by Leadfoot and may be\ninaccurate."
							},
							"parameters": [
								{
									"id": 59,
									"name": "sessionId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1505,
										"name": "Capabilities"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 55,
					"name": "getSessions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Server.ts",
							"line": 1918,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 56,
							"name": "getSessions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets a list of all currently active remote control sessions on this\nserver."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 63,
											"name": "default"
										}
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 37,
					"name": "getStatus",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Server.ts",
							"line": 418,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 38,
							"name": "getStatus",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the status of the remote server.",
								"returns": "An object containing arbitrary properties describing the status\nof the remote server.\n"
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 25,
					"name": "post",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Server.ts",
							"line": 396,
							"character": 6
						}
					],
					"signatures": [
						{
							"id": 26,
							"name": "post",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 27,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 28,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 29,
									"name": "requestData",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "Object"
									}
								},
								{
									"id": 30,
									"name": "pathParts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"name": "T"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						2
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						9,
						7,
						8,
						6
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						39,
						31,
						60,
						19,
						57,
						55,
						37,
						25
					]
				}
			],
			"sources": [
				{
					"fileName": "src/Server.ts",
					"line": 21,
					"character": 27
				}
			]
		},
		{
			"id": 63,
			"name": "Session",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "A Session represents a connection to a remote environment that can be driven\nprogrammatically."
			},
			"children": [
				{
					"id": 64,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"signatures": [
						{
							"id": 65,
							"name": "new Session",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "A Session represents a connection to a remote environment that can be\ndriven programmatically."
							},
							"parameters": [
								{
									"id": 66,
									"name": "sessionId",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The ID of the session, as provided by the remote."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 67,
									"name": "server",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The server that the session belongs to."
									},
									"type": {
										"type": "reference",
										"id": 1,
										"name": "default"
									}
								},
								{
									"id": 68,
									"name": "capabilities",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "A map of bugs and features that the remote\nenvironment exposes.\n"
									},
									"type": {
										"type": "reference",
										"id": 1505,
										"name": "Capabilities"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 63,
								"name": "default"
							},
							"overwrites": {
								"type": "reference",
								"name": "Locator<\n  CancellablePromise<Element>,\n  CancellablePromise<Element[]>,\n  CancellablePromise<void>\n>.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Locator<\n  CancellablePromise<Element>,\n  CancellablePromise<Element[]>,\n  CancellablePromise<void>\n>.constructor"
					}
				},
				{
					"id": 81,
					"name": "capabilities",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "Information about the available features and bugs in the remote\nenvironment."
					},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 71,
							"character": 18
						}
					],
					"getSignature": [
						{
							"id": 82,
							"name": "capabilities",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Information about the available features and bugs in the remote\nenvironment."
							},
							"type": {
								"type": "reference",
								"id": 1505,
								"name": "Capabilities"
							}
						}
					]
				},
				{
					"id": 85,
					"name": "server",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "The Server that the session runs on."
					},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 85,
							"character": 12
						}
					],
					"getSignature": [
						{
							"id": 86,
							"name": "server",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "The Server that the session runs on."
							},
							"type": {
								"type": "reference",
								"id": 1,
								"name": "default"
							}
						}
					]
				},
				{
					"id": 83,
					"name": "sessionId",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"comment": {
						"shortText": "The current session ID."
					},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 78,
							"character": 15
						}
					],
					"getSignature": [
						{
							"id": 84,
							"name": "sessionId",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "The current session ID."
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 250,
					"name": "acceptAlert",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 1461,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 251,
							"name": "acceptAlert",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Accepts an alert, prompt, or confirmation pop-up. Equivalent to clicking\nthe 'OK' button."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 154,
					"name": "activateIme",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 568,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 155,
							"name": "activateIme",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Activates an input method editor in the remote environment.\nAs of April 2014, no known remote environments support IME functions."
							},
							"parameters": [
								{
									"id": 156,
									"name": "engine",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The type of IME to activate.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 218,
					"name": "clearCookies",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 1120,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 219,
							"name": "clearCookies",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Clears all cookies for the current page."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 333,
					"name": "clearLocalStorage",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 2006,
							"character": 19
						}
					],
					"signatures": [
						{
							"id": 334,
							"name": "clearLocalStorage",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Clears all data in local storage for the focused window/frame."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 349,
					"name": "clearSessionStorage",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 2057,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 350,
							"name": "clearSessionStorage",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Clears all data in session storage for the focused window/frame."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 263,
					"name": "clickMouseButton",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 1584,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 264,
							"name": "clickMouseButton",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Clicks a mouse button at the point where the mouse cursor is currently\npositioned. This method may fail to execute with an error if the mouse\nhas not been moved anywhere since the page was loaded."
							},
							"parameters": [
								{
									"id": 265,
									"name": "button",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The button to click. 0 corresponds to the primary mouse\nbutton, 1 to the middle mouse button, 2 to the secondary mouse button.\nNumbers above 2 correspond to any additional buttons a mouse might\nprovide.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 165,
					"name": "closeCurrentWindow",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 666,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 166,
							"name": "closeCurrentWindow",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Closes the currently focused window. In most environments, after the\nwindow has been closed, it is necessary to explicitly switch to whatever\nwindow is now focused."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 152,
					"name": "deactivateIme",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 558,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 153,
							"name": "deactivateIme",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Deactivates any active input method editor in the remote environment.\nAs of April 2014, no known remote environments support IME functions."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 220,
					"name": "deleteCookie",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 1155,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 221,
							"name": "deleteCookie",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Deletes a cookie on the current page."
							},
							"parameters": [
								{
									"id": 222,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The name of the cookie to delete.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 338,
					"name": "deleteLocalStorageItem",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 2024,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 339,
							"name": "deleteLocalStorageItem",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Deletes a value from local storage for the focused window/frame."
							},
							"parameters": [
								{
									"id": 340,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The key of the data to delete.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 354,
					"name": "deleteSessionStorageItem",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 2075,
							"character": 26
						}
					],
					"signatures": [
						{
							"id": 355,
							"name": "deleteSessionStorageItem",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Deletes a value from session storage for the focused window/frame."
							},
							"parameters": [
								{
									"id": 356,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The key of the data to delete.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 252,
					"name": "dismissAlert",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 1470,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 253,
							"name": "dismissAlert",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Dismisses an alert, prompt, or confirmation pop-up. Equivalent to\nclicking the 'OK' button of an alert pop-up or the 'Cancel' button of a\nprompt or confirmation pop-up."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 272,
					"name": "doubleClick",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 1653,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 273,
							"name": "doubleClick",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Double-clicks the primary mouse button."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 297,
					"name": "doubleTap",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"decorators": [
						{
							"name": "forCommand",
							"type": {
								"type": "reference",
								"name": "forCommand"
							},
							"arguments": {
								"properties": "{ usesElement: true }",
								"__scrubbed__": true,
								"__lenormalized__": true
							}
						}
					],
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 1800,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 298,
							"name": "doubleTap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs a double-tap gesture on an element."
							},
							"parameters": [
								{
									"id": 299,
									"name": "element",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The element to double-tap.\n"
									},
									"type": {
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 134,
					"name": "execute",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 413,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 135,
							"name": "execute",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Executes JavaScript code within the focused window/frame. The code\nshould return a value synchronously.",
								"text": "See [[Session.Session.executeAsync]] to execute code that returns values\nasynchronously.\n",
								"returns": "The value returned by the remote code. Only values that can be\nserialised to JSON, plus DOM elements, can be returned.\n"
							},
							"typeParameter": [
								{
									"id": 136,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 137,
									"name": "script",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The code to execute. This function will always be\nconverted to a string, sent to the remote environment, and reassembled\nas a new anonymous function on the remote end. This means that you\ncannot access any variables through closure. If your code needs to get\ndata from variables on the local end, they should be passed using\n`args`.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Function"
											}
										]
									}
								},
								{
									"id": 138,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "An array of arguments that will be passed to the executed\ncode. Only values that can be serialised to JSON, plus\n[[Element.Element]] objects, can be specified as arguments.\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"name": "T"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 139,
					"name": "executeAsync",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 478,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 140,
							"name": "executeAsync",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Executes JavaScript code within the focused window/frame. The code must\ninvoke the provided callback in order to signal that it has completed\nexecution.",
								"text": "See [[Session.Session.execute]] to execute code that returns values\nsynchronously.\n\nSee [[Session.Session.setExecuteAsyncTimeout]] to set the time until an\nasynchronous script is considered timed out.\n",
								"returns": "The value returned by the remote code. Only values that can be\nserialised to JSON, plus DOM elements, can be returned.\n"
							},
							"typeParameter": [
								{
									"id": 141,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 142,
									"name": "script",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The code to execute. This function will always be\nconverted to a string, sent to the remote environment, and reassembled\nas a new anonymous function on the remote end. This means that you\ncannot access any variables through closure. If your code needs to get\ndata from variables on the local end, they should be passed using\n`args`.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "Function"
											}
										]
									}
								},
								{
									"id": 143,
									"name": "args",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "An array of arguments that will be passed to the executed\ncode. Only values that can be serialised to JSON, plus\n[[Element.Element]] objects, can be specified as arguments. In addition\nto these arguments, a callback function will always be passed as the\nfinal argument to the function specified in `script`. This callback\nfunction must be invoked in order to signal that execution has\ncompleted. The return value of the execution, if any, should be passed\nto this callback function.\n"
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"name": "T"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 227,
					"name": "find",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 1233,
							"character": 6
						}
					],
					"signatures": [
						{
							"id": 228,
							"name": "find",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first element from the focused window/frame that matches the\ngiven query.",
								"text": "See [[Session.Session.setFindTimeout]] to set the amount of time it the\nremote environment should spend waiting for an element that does not\nexist at the time of the `find` call before timing out.\n"
							},
							"parameters": [
								{
									"id": 229,
									"name": "using",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The element retrieval strategy to use. One of 'class name',\n'css selector', 'id', 'name', 'link text', 'partial link text', 'tag\nname', 'xpath'.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "class name"
											},
											{
												"type": "literal",
												"value": "id"
											},
											{
												"type": "literal",
												"value": "name"
											},
											{
												"type": "literal",
												"value": "partial link text"
											},
											{
												"type": "literal",
												"value": "tag name"
											},
											{
												"type": "literal",
												"value": "css selector"
											},
											{
												"type": "literal",
												"value": "link text"
											},
											{
												"type": "literal",
												"value": "xpath"
											}
										]
									}
								},
								{
									"id": 230,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The strategy-specific value to search for. For example, if\n`using` is 'id', `value` should be the ID of the element to retrieve.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								],
								"name": "CancellablePromise"
							},
							"overwrites": {
								"type": "reference",
								"name": "Locator.find"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Locator.find"
					}
				},
				{
					"id": 231,
					"name": "findAll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 1289,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 232,
							"name": "findAll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets an array of elements from the focused window/frame that match the\ngiven query."
							},
							"parameters": [
								{
									"id": 233,
									"name": "using",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The element retrieval strategy to use. See\n[[Session.Session.find]] for options.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "class name"
											},
											{
												"type": "literal",
												"value": "id"
											},
											{
												"type": "literal",
												"value": "name"
											},
											{
												"type": "literal",
												"value": "partial link text"
											},
											{
												"type": "literal",
												"value": "tag name"
											},
											{
												"type": "literal",
												"value": "css selector"
											},
											{
												"type": "literal",
												"value": "link text"
											},
											{
												"type": "literal",
												"value": "xpath"
											}
										]
									}
								},
								{
									"id": 234,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The strategy-specific value to search for. See\n[[Session.Session.find]] for details.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 475,
											"name": "default"
										}
									}
								],
								"name": "CancellablePromise"
							},
							"overwrites": {
								"type": "reference",
								"name": "Locator.findAll"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Locator.findAll"
					}
				},
				{
					"id": 406,
					"name": "findAllByClassName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 106,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 407,
							"name": "findAllByClassName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets all elements inside this element matching the given CSS class name."
							},
							"parameters": [
								{
									"id": 408,
									"name": "className",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The CSS class name to search for.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 475,
											"name": "default"
										}
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findAllByClassName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findAllByClassName"
					}
				},
				{
					"id": 409,
					"name": "findAllByCssSelector",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 115,
							"character": 22
						}
					],
					"signatures": [
						{
							"id": 410,
							"name": "findAllByCssSelector",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets all elements inside this element matching the given CSS selector."
							},
							"parameters": [
								{
									"id": 411,
									"name": "selector",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The CSS selector to search for.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 475,
											"name": "default"
										}
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findAllByCssSelector"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findAllByCssSelector"
					}
				},
				{
					"id": 415,
					"name": "findAllByLinkText",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 134,
							"character": 19
						}
					],
					"signatures": [
						{
							"id": 416,
							"name": "findAllByLinkText",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets all elements inside this element matching the given\ncase-insensitive link text."
							},
							"parameters": [
								{
									"id": 417,
									"name": "text",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The link text of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 475,
											"name": "default"
										}
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findAllByLinkText"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findAllByLinkText"
					}
				},
				{
					"id": 412,
					"name": "findAllByName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 124,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 413,
							"name": "findAllByName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets all elements inside this element matching the given name attribute."
							},
							"parameters": [
								{
									"id": 414,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The name of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 475,
											"name": "default"
										}
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findAllByName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findAllByName"
					}
				},
				{
					"id": 418,
					"name": "findAllByPartialLinkText",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 144,
							"character": 26
						}
					],
					"signatures": [
						{
							"id": 419,
							"name": "findAllByPartialLinkText",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets all elements inside this element partially matching the given\ncase-insensitive link text."
							},
							"parameters": [
								{
									"id": 420,
									"name": "text",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The partial link text of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 475,
											"name": "default"
										}
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findAllByPartialLinkText"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findAllByPartialLinkText"
					}
				},
				{
					"id": 421,
					"name": "findAllByTagName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 153,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 422,
							"name": "findAllByTagName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets all elements inside this element matching the given HTML tag name."
							},
							"parameters": [
								{
									"id": 423,
									"name": "tagName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The tag name of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 475,
											"name": "default"
										}
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findAllByTagName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findAllByTagName"
					}
				},
				{
					"id": 424,
					"name": "findAllByXpath",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 162,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 425,
							"name": "findAllByXpath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets all elements inside this element matching the given XPath selector."
							},
							"parameters": [
								{
									"id": 426,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The XPath selector to search for.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 475,
											"name": "default"
										}
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findAllByXpath"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findAllByXpath"
					}
				},
				{
					"id": 382,
					"name": "findByClassName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 28,
							"character": 17
						}
					],
					"signatures": [
						{
							"id": 383,
							"name": "findByClassName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first element inside this element matching the given CSS class\nname."
							},
							"parameters": [
								{
									"id": 384,
									"name": "className",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The CSS class name to search for.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findByClassName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findByClassName"
					}
				},
				{
					"id": 385,
					"name": "findByCssSelector",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 38,
							"character": 19
						}
					],
					"signatures": [
						{
							"id": 386,
							"name": "findByCssSelector",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first element inside this element matching the given CSS\nselector."
							},
							"parameters": [
								{
									"id": 387,
									"name": "selector",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The CSS selector to search for.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findByCssSelector"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findByCssSelector"
					}
				},
				{
					"id": 388,
					"name": "findById",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 47,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 389,
							"name": "findById",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first element inside this element matching the given ID."
							},
							"parameters": [
								{
									"id": 390,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The ID of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findById"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findById"
					}
				},
				{
					"id": 394,
					"name": "findByLinkText",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 67,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 395,
							"name": "findByLinkText",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first element inside this element matching the given\ncase-insensitive link text."
							},
							"parameters": [
								{
									"id": 396,
									"name": "text",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The link text of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findByLinkText"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findByLinkText"
					}
				},
				{
					"id": 391,
					"name": "findByName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 57,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 392,
							"name": "findByName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first element inside this element matching the given name\nattribute."
							},
							"parameters": [
								{
									"id": 393,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The name of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findByName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findByName"
					}
				},
				{
					"id": 397,
					"name": "findByPartialLinkText",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 77,
							"character": 23
						}
					],
					"signatures": [
						{
							"id": 398,
							"name": "findByPartialLinkText",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first element inside this element partially matching the given\ncase-insensitive link text."
							},
							"parameters": [
								{
									"id": 399,
									"name": "text",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The partial link text of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findByPartialLinkText"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findByPartialLinkText"
					}
				},
				{
					"id": 400,
					"name": "findByTagName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 87,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 401,
							"name": "findByTagName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first element inside this element matching the given HTML tag\nname."
							},
							"parameters": [
								{
									"id": 402,
									"name": "tagName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The tag name of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findByTagName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findByTagName"
					}
				},
				{
					"id": 403,
					"name": "findByXpath",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 97,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 404,
							"name": "findByXpath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first element inside this element matching the given XPath\nselector."
							},
							"parameters": [
								{
									"id": 405,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The XPath selector to search for.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findByXpath"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findByXpath"
					}
				},
				{
					"id": 359,
					"name": "findDisplayed",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 2102,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 360,
							"name": "findDisplayed",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first [[Element.Element.isDisplayed|displayed]] element in the\ncurrently active window/frame matching the given query. This is\ninherently slower than [[Session.Session.find]], so should only be used\nin cases where the visibility of an element cannot be ensured in\nadvance.",
								"tags": [
									{
										"tag": "since",
										"text": "1.6\n"
									}
								]
							},
							"parameters": [
								{
									"id": 361,
									"name": "using",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The element retrieval strategy to use. See\n[[Session.Session.find]] for options.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "class name"
											},
											{
												"type": "literal",
												"value": "id"
											},
											{
												"type": "literal",
												"value": "name"
											},
											{
												"type": "literal",
												"value": "partial link text"
											},
											{
												"type": "literal",
												"value": "tag name"
											},
											{
												"type": "literal",
												"value": "css selector"
											},
											{
												"type": "literal",
												"value": "link text"
											},
											{
												"type": "literal",
												"value": "xpath"
											}
										]
									}
								},
								{
									"id": 362,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The strategy-specific value to search for. See\n[[Session.Session.find]] for details.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								],
								"name": "CancellablePromise"
							},
							"overwrites": {
								"type": "reference",
								"name": "Locator.findDisplayed"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Locator.findDisplayed"
					}
				},
				{
					"id": 427,
					"name": "findDisplayedByClassName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 175,
							"character": 26
						}
					],
					"signatures": [
						{
							"id": 428,
							"name": "findDisplayedByClassName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first [[Element.isDisplayed|displayed]] element inside this\nelement matching the given CSS class name. This is inherently slower\nthan [[Element.find]], so should only be used in cases where the\nvisibility of an element cannot be ensured in advance.",
								"tags": [
									{
										"tag": "since",
										"text": "1.6"
									}
								]
							},
							"parameters": [
								{
									"id": 429,
									"name": "className",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The CSS class name to search for.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findDisplayedByClassName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findDisplayedByClassName"
					}
				},
				{
					"id": 430,
					"name": "findDisplayedByCssSelector",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 188,
							"character": 28
						}
					],
					"signatures": [
						{
							"id": 431,
							"name": "findDisplayedByCssSelector",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first [[Element.isDisplayed|displayed]] element inside this\nelement matching the given CSS selector. This is inherently slower than\n[[Element.find]], so should only be used in cases where the visibility\nof an element cannot be ensured in advance.",
								"tags": [
									{
										"tag": "since",
										"text": "1.6"
									}
								]
							},
							"parameters": [
								{
									"id": 432,
									"name": "selector",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The CSS selector to search for.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findDisplayedByCssSelector"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findDisplayedByCssSelector"
					}
				},
				{
					"id": 433,
					"name": "findDisplayedById",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 201,
							"character": 19
						}
					],
					"signatures": [
						{
							"id": 434,
							"name": "findDisplayedById",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first [[Element.isDisplayed|displayed]] element inside this\nelement matching the given ID. This is inherently slower than\n[[Element.find]], so should only be used in cases where the visibility\nof an element cannot be ensured in advance.",
								"tags": [
									{
										"tag": "since",
										"text": "1.6"
									}
								]
							},
							"parameters": [
								{
									"id": 435,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The ID of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findDisplayedById"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findDisplayedById"
					}
				},
				{
					"id": 439,
					"name": "findDisplayedByLinkText",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 227,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 440,
							"name": "findDisplayedByLinkText",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first [[Element.isDisplayed|displayed]] element inside this\nelement matching the given case-insensitive link text. This is\ninherently slower than [[Element.find]], so should only be used in cases\nwhere the visibility of an element cannot be ensured in advance.",
								"tags": [
									{
										"tag": "since",
										"text": "1.6"
									}
								]
							},
							"parameters": [
								{
									"id": 441,
									"name": "text",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The link text of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findDisplayedByLinkText"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findDisplayedByLinkText"
					}
				},
				{
					"id": 436,
					"name": "findDisplayedByName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 214,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 437,
							"name": "findDisplayedByName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first [[Element.isDisplayed|displayed]] element inside this\nelement matching the given name attribute. This is inherently slower\nthan [[Element.find]], so should only be used in cases where the\nvisibility of an element cannot be ensured in advance.",
								"tags": [
									{
										"tag": "since",
										"text": "1.6"
									}
								]
							},
							"parameters": [
								{
									"id": 438,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The name of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findDisplayedByName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findDisplayedByName"
					}
				},
				{
					"id": 442,
					"name": "findDisplayedByPartialLinkText",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 240,
							"character": 32
						}
					],
					"signatures": [
						{
							"id": 443,
							"name": "findDisplayedByPartialLinkText",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first [[Element.isDisplayed|displayed]] element inside this\nelement partially matching the given case-insensitive link text. This is\ninherently slower than [[Element.find]], so should only be used in cases\nwhere the visibility of an element cannot be ensured in advance.",
								"tags": [
									{
										"tag": "since",
										"text": "1.6"
									}
								]
							},
							"parameters": [
								{
									"id": 444,
									"name": "text",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The partial link text of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findDisplayedByPartialLinkText"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findDisplayedByPartialLinkText"
					}
				},
				{
					"id": 445,
					"name": "findDisplayedByTagName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 253,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 446,
							"name": "findDisplayedByTagName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first [[Element.isDisplayed|displayed]] element inside this\nelement matching the given HTML tag name. This is inherently slower than\n[[Element.find]], so should only be used in cases where the visibility\nof an element cannot be ensured in advance.",
								"tags": [
									{
										"tag": "since",
										"text": "1.6"
									}
								]
							},
							"parameters": [
								{
									"id": 447,
									"name": "tagName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The tag name of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findDisplayedByTagName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findDisplayedByTagName"
					}
				},
				{
					"id": 448,
					"name": "findDisplayedByXpath",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 266,
							"character": 22
						}
					],
					"signatures": [
						{
							"id": 449,
							"name": "findDisplayedByXpath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the first [[Element.isDisplayed|displayed]] element inside this\nelement matching the given XPath selector. This is inherently slower\nthan [[Element.find]], so should only be used in cases where the\nvisibility of an element cannot be ensured in advance.",
								"tags": [
									{
										"tag": "since",
										"text": "1.6"
									}
								]
							},
							"parameters": [
								{
									"id": 450,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The XPath selector to search for.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.findDisplayedByXpath"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.findDisplayedByXpath"
					}
				},
				{
					"id": 303,
					"name": "flickFinger",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 1828,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 304,
							"name": "flickFinger",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Flicks a finger. Note that this method is currently badly specified and\nhighly dysfunctional and is only provided for the sake of completeness."
							},
							"parameters": [
								{
									"id": 305,
									"name": "element",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The element where the flick should start."
									},
									"type": {
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								},
								{
									"id": 306,
									"name": "xOffset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The x-offset in pixels to flick by."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 307,
									"name": "yOffset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The x-offset in pixels to flick by."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 308,
									"name": "speed",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The speed of the flick, in pixels per *second*. Most human\nflicks are 100–200ms, so this value will be higher than expected.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						},
						{
							"id": 309,
							"name": "flickFinger",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 310,
									"name": "xOffset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 311,
									"name": "yOffset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 312,
									"name": "speed",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 125,
					"name": "get",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 351,
							"character": 5
						}
					],
					"signatures": [
						{
							"id": 126,
							"name": "get",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Navigates the focused window/frame to a new URL."
							},
							"parameters": [
								{
									"id": 127,
									"name": "url",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 235,
					"name": "getActiveElement",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"decorators": [
						{
							"name": "forCommand",
							"type": {
								"type": "reference",
								"name": "forCommand"
							},
							"arguments": {
								"properties": "{ createsContext: true }",
								"__scrubbed__": true,
								"__lenormalized__": true
							}
						}
					],
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 1340,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 236,
							"name": "getActiveElement",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the currently focused element from the focused window/frame."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 148,
					"name": "getActiveImeEngine",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 541,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 149,
							"name": "getActiveImeEngine",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the currently active input method editor for the remote environment.\nAs of April 2014, no known remote environments support IME functions."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 245,
					"name": "getAlertText",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 1438,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 246,
							"name": "getAlertText",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the text displayed in the currently active alert pop-up."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 121,
					"name": "getAllWindowHandles",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 314,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 122,
							"name": "getAllWindowHandles",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets a list of identifiers for all currently open windows."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 323,
					"name": "getApplicationCacheStatus",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 1974,
							"character": 27
						}
					],
					"signatures": [
						{
							"id": 324,
							"name": "getApplicationCacheStatus",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the current state of the HTML5 application cache for the current\npage.",
								"returns": "The cache status. One of 0 (uncached), 1 (cached/idle), 2\n(checking), 3 (downloading), 4 (update ready), 5 (obsolete).\n"
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 146,
					"name": "getAvailableImeEngines",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 533,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 147,
							"name": "getAvailableImeEngines",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets a list of input method editor engines available to the remote\nenvironment. As of April 2014, no known remote environments support IME\nfunctions."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 321,
					"name": "getAvailableLogTypes",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 1959,
							"character": 22
						}
					],
					"signatures": [
						{
							"id": 322,
							"name": "getAvailableLogTypes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the types of logs that are currently available for retrieval from\nthe remote environment."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 213,
					"name": "getCookies",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 1028,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 214,
							"name": "getCookies",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets all cookies set on the current page."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 123,
					"name": "getCurrentUrl",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 344,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 124,
							"name": "getCurrentUrl",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the URL that is loaded in the focused window/frame."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 119,
					"name": "getCurrentWindowHandle",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 276,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 120,
							"name": "getCurrentWindowHandle",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the identifier for the window that is currently focused.",
								"returns": "A window handle identifier that can be used with other window\nhandling functions.\n"
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 367,
					"name": "getExecuteAsyncTimeout",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 2123,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 368,
							"name": "getExecuteAsyncTimeout",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the timeout for [[Session.Session.executeAsync]] calls."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 372,
					"name": "getFindTimeout",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 2139,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 373,
							"name": "getFindTimeout",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the timeout for [[Session.Session.find]] calls."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 313,
					"name": "getGeolocation",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 1872,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 314,
							"name": "getGeolocation",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the current geographical location of the remote environment.",
								"returns": "Latitude and longitude are specified using standard WGS84\ndecimal latitude/longitude. Altitude is specified as meters above the\nWGS84 ellipsoid. Not all environments support altitude.\n"
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"id": 1596,
										"name": "Geolocation"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 335,
					"name": "getLocalStorageItem",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 2015,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 336,
							"name": "getLocalStorageItem",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets a value from local storage for the focused window/frame."
							},
							"parameters": [
								{
									"id": 337,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The key of the data to get.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 327,
					"name": "getLocalStorageKeys",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 1989,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 328,
							"name": "getLocalStorageKeys",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the list of keys set in local storage for the focused window/frame."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 341,
					"name": "getLocalStorageLength",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 2032,
							"character": 23
						}
					],
					"signatures": [
						{
							"id": 342,
							"name": "getLocalStorageLength",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the number of keys set in local storage for the focused\nwindow/frame."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 318,
					"name": "getLogsFor",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 1917,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 319,
							"name": "getLogsFor",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets all logs from the remote environment of the given type. The logs in\nthe remote environment are cleared once they have been retrieved.",
								"returns": "An array of log entry objects. Timestamps in log entries are\nUnix timestamps, in seconds.\n"
							},
							"parameters": [
								{
									"id": 320,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The type of log entries to retrieve. Available log types\ndiffer between remote environments. Use\n[[Session.Session.getAvailableLogTypes]] to learn what log types are\ncurrently available. Not all environments support all possible log\ntypes.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"id": 1600,
											"name": "LogEntry"
										}
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 240,
					"name": "getOrientation",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 1414,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 241,
							"name": "getOrientation",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the current screen orientation.",
								"returns": "Either 'portrait' or 'landscape'.\n"
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 377,
					"name": "getPageLoadTimeout",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 2155,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 378,
							"name": "getPageLoadTimeout",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the timeout for [[Session.Session.get]] calls."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 223,
					"name": "getPageSource",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 1198,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 224,
							"name": "getPageSource",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the HTML loaded in the focused window/frame. This markup is\nserialised by the remote environment so may not exactly match the HTML\nprovided by the Web server."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 225,
					"name": "getPageTitle",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 1214,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 226,
							"name": "getPageTitle",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the title of the top-level browsing context of the current window\nor tab."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 351,
					"name": "getSessionStorageItem",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 2066,
							"character": 23
						}
					],
					"signatures": [
						{
							"id": 352,
							"name": "getSessionStorageItem",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets a value from session storage for the focused window/frame."
							},
							"parameters": [
								{
									"id": 353,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The key of the data to get.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 343,
					"name": "getSessionStorageKeys",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 2040,
							"character": 23
						}
					],
					"signatures": [
						{
							"id": 344,
							"name": "getSessionStorageKeys",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the list of keys set in session storage for the focused\nwindow/frame."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 357,
					"name": "getSessionStorageLength",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 2083,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 358,
							"name": "getSessionStorageLength",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the number of keys set in session storage for the focused\nwindow/frame."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 112,
					"name": "getTimeout",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 192,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 113,
							"name": "getTimeout",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the current value of a timeout for the session.",
								"returns": "The timeout, in milliseconds.\n"
							},
							"parameters": [
								{
									"id": 114,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The type of timeout to retrieve. One of 'script',\n'implicit', or 'page load'."
									},
									"type": {
										"type": "reference",
										"name": "Timeout"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 204,
					"name": "getWindowPosition",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 932,
							"character": 19
						}
					],
					"signatures": [
						{
							"id": 205,
							"name": "getWindowPosition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the position of a window.",
								"text": "Note that this method is not part of the W3C WebDriver standard.\n",
								"returns": "An object describing the position of the window, in CSS pixels,\nrelative to the top-left corner of the primary monitor. If a secondary\nmonitor exists above or to the left of the primary monitor, these values\nwill be negative.\n"
							},
							"parameters": [
								{
									"id": 206,
									"name": "windowHandle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The name of the window to query. See\n[[Session.Session.switchToWindow]] to learn about valid window names.\nOmit this argument to query the currently focused window.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 207,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 208,
													"name": "x",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 209,
													"name": "y",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														208,
														209
													]
												}
											]
										}
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 181,
					"name": "getWindowRect",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 827,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 182,
							"name": "getWindowRect",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Return the current window's rectangle (size and position)."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 183,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 185,
													"name": "height",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/Session.ts",
															"line": 830,
															"character": 12
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 184,
													"name": "width",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/Session.ts",
															"line": 829,
															"character": 11
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 186,
													"name": "x",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/Session.ts",
															"line": 831,
															"character": 7
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 187,
													"name": "y",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/Session.ts",
															"line": 832,
															"character": 7
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														185,
														184,
														186,
														187
													]
												}
											]
										}
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 175,
					"name": "getWindowSize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 777,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 176,
							"name": "getWindowSize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets the dimensions of a window.",
								"returns": "An object describing the width and height of the window, in CSS\npixels.\n"
							},
							"parameters": [
								{
									"id": 177,
									"name": "windowHandle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The name of the window to query. See\n[[Session.Session.switchToWindow]] to learn about valid window names.\nOmit this argument to query the currently focused window.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 178,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 180,
													"name": "height",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													},
													"defaultValue": "..."
												},
												{
													"id": 179,
													"name": "width",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													},
													"defaultValue": "..."
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														180,
														179
													]
												}
											]
										}
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 130,
					"name": "goBack",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 375,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 131,
							"name": "goBack",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Navigates the focused window/frame back one page using the browser’s\nnavigation history."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 128,
					"name": "goForward",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 365,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 129,
							"name": "goForward",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Navigates the focused window/frame forward one page using the browser’s\nnavigation history."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 150,
					"name": "isImeActivated",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 550,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 151,
							"name": "isImeActivated",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns whether or not an input method editor is currently active in the\nremote environment. As of April 2014, no known remote environments\nsupport IME functions."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 300,
					"name": "longTap",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"decorators": [
						{
							"name": "forCommand",
							"type": {
								"type": "reference",
								"name": "forCommand"
							},
							"arguments": {
								"properties": "{ usesElement: true }",
								"__scrubbed__": true,
								"__lenormalized__": true
							}
						}
					],
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 1813,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 301,
							"name": "longTap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Performs a long-tap gesture on an element."
							},
							"parameters": [
								{
									"id": 302,
									"name": "element",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The element to long-tap.\n"
									},
									"type": {
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 210,
					"name": "maximizeWindow",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 992,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 211,
							"name": "maximizeWindow",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Maximises a window according to the platform’s window system behaviour."
							},
							"parameters": [
								{
									"id": 212,
									"name": "windowHandle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The name of the window to resize. See\n[[Session.Session.switchToWindow]] to learn about valid window names.\nOmit this argument to resize the currently focused window.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 285,
					"name": "moveFinger",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 1727,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 286,
							"name": "moveFinger",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Moves the last depressed finger to a new point on the touch screen."
							},
							"parameters": [
								{
									"id": 287,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The screen x-coordinate to move to, maybe in device pixels."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 288,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The screen y-coordinate to move to, maybe in device pixels.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 254,
					"name": "moveMouseTo",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 1495,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 255,
							"name": "moveMouseTo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Moves the remote environment’s mouse cursor to the specified element or\nrelative position. If the element is outside of the viewport, the remote\ndriver will attempt to scroll it into view automatically."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						},
						{
							"id": 256,
							"name": "moveMouseTo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 257,
									"name": "xOffset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 258,
									"name": "yOffset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						},
						{
							"id": 259,
							"name": "moveMouseTo",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 260,
									"name": "element",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								},
								{
									"id": 261,
									"name": "xOffset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 262,
									"name": "yOffset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 277,
					"name": "pressFinger",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 1701,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 278,
							"name": "pressFinger",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Depresses a new finger at the given point on a touch screen device\nwithout releasing it."
							},
							"parameters": [
								{
									"id": 279,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The screen x-coordinate to press, maybe in device pixels."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 280,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The screen y-coordinate to press, maybe in device pixels.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 237,
					"name": "pressKeys",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 1395,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 238,
							"name": "pressKeys",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Types into the focused window/frame/element."
							},
							"parameters": [
								{
									"id": 239,
									"name": "keys",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The text to type in the remote environment. It is possible\nto type keys that do not have normal character representations (modifier\nkeys, function keys, etc.) as well as keys that have two different\nrepresentations on a typical US-ASCII keyboard (numpad keys); use the\nvalues from [[keys]] to type these special characters. Any modifier keys\nthat are activated by this call will persist until they are deactivated.\nTo deactivate a modifier key, type the same modifier key a second time,\nor send `\\uE000` ('NULL') to deactivate all currently active modifier\nkeys.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 266,
					"name": "pressMouseButton",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 1612,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 267,
							"name": "pressMouseButton",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Depresses a mouse button without releasing it."
							},
							"parameters": [
								{
									"id": 268,
									"name": "button",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The button to press. See [[Session.Session.click]] for\navailable options.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 325,
					"name": "quit",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 1982,
							"character": 6
						}
					],
					"signatures": [
						{
							"id": 326,
							"name": "quit",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Terminates the session. No more commands will be accepted by the remote\nafter this point."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 132,
					"name": "refresh",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 384,
							"character": 9
						}
					],
					"signatures": [
						{
							"id": 133,
							"name": "refresh",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Reloads the current browser window/frame."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 281,
					"name": "releaseFinger",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 1717,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 282,
							"name": "releaseFinger",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Releases whatever finger exists at the given point on a touch screen\ndevice."
							},
							"parameters": [
								{
									"id": 283,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The screen x-coordinate where a finger is pressed, maybe in\ndevice pixels."
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 284,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The screen y-coordinate where a finger is pressed, maybe in\ndevice pixels.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 269,
					"name": "releaseMouseButton",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 1634,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 270,
							"name": "releaseMouseButton",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Releases a previously depressed mouse button."
							},
							"parameters": [
								{
									"id": 271,
									"name": "button",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"text": "The button to press. See [[Session.Session.click]] for\navailable options.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 106,
					"name": "serverDelete",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 181,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 107,
							"name": "serverDelete",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 108,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 109,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 110,
									"name": "requestData",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 111,
									"name": "pathParts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"name": "T"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 94,
					"name": "serverGet",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 173,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 95,
							"name": "serverGet",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 96,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 97,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 98,
									"name": "requestData",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 99,
									"name": "pathParts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"name": "T"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 100,
					"name": "serverPost",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 177,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 101,
							"name": "serverPost",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"typeParameter": [
								{
									"id": 102,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 103,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 104,
									"name": "requestData",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 105,
									"name": "pathParts",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"name": "T"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 215,
					"name": "setCookie",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 1062,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 216,
							"name": "setCookie",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets a cookie on the current page."
							},
							"parameters": [
								{
									"id": 217,
									"name": "cookie",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1604,
										"name": "WebDriverCookie"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 369,
					"name": "setExecuteAsyncTimeout",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 2132,
							"character": 24
						}
					],
					"signatures": [
						{
							"id": 370,
							"name": "setExecuteAsyncTimeout",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets the timeout for [[Session.Session.executeAsync]] calls."
							},
							"parameters": [
								{
									"id": 371,
									"name": "ms",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The length of the timeout, in milliseconds.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 374,
					"name": "setFindTimeout",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 2148,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 375,
							"name": "setFindTimeout",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets the timeout for [[Session.Session.find]] calls."
							},
							"parameters": [
								{
									"id": 376,
									"name": "ms",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The length of the timeout, in milliseconds.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 315,
					"name": "setGeolocation",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 1894,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 316,
							"name": "setGeolocation",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets the geographical location of the remote environment."
							},
							"parameters": [
								{
									"id": 317,
									"name": "location",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Latitude and longitude are specified using standard\nWGS84 decimal latitude/longitude. Altitude is specified as meters above\nthe WGS84 ellipsoid. Not all environments support altitude.\n"
									},
									"type": {
										"type": "reference",
										"id": 1596,
										"name": "Geolocation"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 329,
					"name": "setLocalStorageItem",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 1999,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 330,
							"name": "setLocalStorageItem",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets a value in local storage for the focused window/frame."
							},
							"parameters": [
								{
									"id": 331,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The key to set."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 332,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The value to set.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 242,
					"name": "setOrientation",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 1427,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 243,
							"name": "setOrientation",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets the screen orientation."
							},
							"parameters": [
								{
									"id": 244,
									"name": "orientation",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "Either 'portrait' or 'landscape'.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 379,
					"name": "setPageLoadTimeout",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 2164,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 380,
							"name": "setPageLoadTimeout",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets the timeout for [[Session.Session.get]] calls."
							},
							"parameters": [
								{
									"id": 381,
									"name": "ms",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The length of the timeout, in milliseconds.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 345,
					"name": "setSessionStorageItem",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 2050,
							"character": 23
						}
					],
					"signatures": [
						{
							"id": 346,
							"name": "setSessionStorageItem",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets a value in session storage for the focused window/frame."
							},
							"parameters": [
								{
									"id": 347,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The key to set."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 348,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The value to set.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 115,
					"name": "setTimeout",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 211,
							"character": 12
						}
					],
					"signatures": [
						{
							"id": 116,
							"name": "setTimeout",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets the value of a timeout for the session."
							},
							"parameters": [
								{
									"id": 117,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The type of timeout to set. One of 'script', 'implicit', or\n'page load'.\n"
									},
									"type": {
										"type": "reference",
										"name": "Timeout"
									}
								},
								{
									"id": 118,
									"name": "ms",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The length of time to use for the timeout, in milliseconds. A\nvalue of 0 will cause operations to time out immediately.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 196,
					"name": "setWindowPosition",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 861,
							"character": 19
						}
					],
					"signatures": [
						{
							"id": 197,
							"name": "setWindowPosition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets the position of a window.",
								"text": "Note that this method is not part of the W3C WebDriver standard.\n"
							},
							"parameters": [
								{
									"id": 198,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The screen x-coordinate to move to, in CSS pixels, relative to\nthe left edge of the primary monitor.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 199,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The screen y-coordinate to move to, in CSS pixels, relative to\nthe top edge of the primary monitor.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						},
						{
							"id": 200,
							"name": "setWindowPosition",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 201,
									"name": "windowHandle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 202,
									"name": "x",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 203,
									"name": "y",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 188,
					"name": "setWindowRect",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 842,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 189,
							"name": "setWindowRect",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Set the current window's rectangle (size and position)."
							},
							"parameters": [
								{
									"id": 190,
									"name": "rect",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The windows rectangle. This may contain all 4 properties, or\njust x & y, or just width & height.\n"
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 191,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 195,
													"name": "height",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/Session.ts",
															"line": 842,
															"character": 67
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 194,
													"name": "width",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/Session.ts",
															"line": 842,
															"character": 51
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 192,
													"name": "x",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/Session.ts",
															"line": 842,
															"character": 25
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 193,
													"name": "y",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/Session.ts",
															"line": 842,
															"character": 36
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														195,
														194,
														192,
														193
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 167,
					"name": "setWindowSize",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 706,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 168,
							"name": "setWindowSize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Sets the dimensions of a window."
							},
							"parameters": [
								{
									"id": 169,
									"name": "width",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The new width of the window, in CSS pixels.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 170,
									"name": "height",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The new height of the window, in CSS pixels.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						},
						{
							"id": 171,
							"name": "setWindowSize",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 172,
									"name": "windowHandle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 173,
									"name": "width",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 174,
									"name": "height",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 157,
					"name": "switchToFrame",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 581,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 158,
							"name": "switchToFrame",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Switches the currently focused frame to a new frame."
							},
							"parameters": [
								{
									"id": 159,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The frame to switch to. In most environments, a number or\nstring value corresponds to a key in the `window.frames` object of the\ncurrently active frame. If `null`, the topmost (default) frame will be\nused. If an Element is provided, it must correspond to a `<frame>` or\n`<iframe>` element.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"id": 475,
												"name": "default"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 163,
					"name": "switchToParentFrame",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 638,
							"character": 21
						}
					],
					"signatures": [
						{
							"id": 164,
							"name": "switchToParentFrame",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Switches the currently focused frame to the parent of the currently\nfocused frame."
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 160,
					"name": "switchToWindow",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 625,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 161,
							"name": "switchToWindow",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Switches the currently focused window to a new window."
							},
							"parameters": [
								{
									"id": 162,
									"name": "handle",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The handle of the window to switch to. In mobile\nenvironments and environments based on the W3C WebDriver standard, this\nshould be a handle as returned by\n[[Session.Session.getAllWindowHandles]].\n\nIn environments using the JsonWireProtocol, this value corresponds to\nthe `window.name` property of a window.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 144,
					"name": "takeScreenshot",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 522,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 145,
							"name": "takeScreenshot",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Gets a screenshot of the focused window and returns it in PNG format.",
								"returns": "A buffer containing a PNG image.\n"
							},
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"name": "Buffer"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 274,
					"name": "tap",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"decorators": [
						{
							"name": "forCommand",
							"type": {
								"type": "reference",
								"name": "forCommand"
							},
							"arguments": {
								"properties": "{ usesElement: true }",
								"__scrubbed__": true,
								"__lenormalized__": true
							}
						}
					],
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 1688,
							"character": 5
						}
					],
					"signatures": [
						{
							"id": 275,
							"name": "tap",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Taps an element on a touch screen device. If the element is outside of\nthe viewport, the remote driver will attempt to scroll it into view\nautomatically."
							},
							"parameters": [
								{
									"id": 276,
									"name": "element",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The element to tap.\n"
									},
									"type": {
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 289,
					"name": "touchScroll",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 1746,
							"character": 13
						}
					],
					"signatures": [
						{
							"id": 290,
							"name": "touchScroll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Scrolls the currently focused window on a touch screen device."
							},
							"parameters": [
								{
									"id": 291,
									"name": "xOffset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "An optional x-offset, relative to the left edge of the\nelement, in CSS pixels. If no element is specified, the offset is\nrelative to the previous scroll position of the window.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 292,
									"name": "yOffset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "An optional y-offset, relative to the top edge of the\nelement, in CSS pixels. If no element is specified, the offset is\nrelative to the previous scroll position of the window.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						},
						{
							"id": 293,
							"name": "touchScroll",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 294,
									"name": "element",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 475,
										"name": "default"
									}
								},
								{
									"id": 295,
									"name": "xOffset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 296,
									"name": "yOffset",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 247,
					"name": "typeInPrompt",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 1447,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 248,
							"name": "typeInPrompt",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Types into the currently active prompt pop-up."
							},
							"parameters": [
								{
									"id": 249,
									"name": "text",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The text to type into the pop-up’s input box.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							}
						}
					]
				},
				{
					"id": 363,
					"name": "waitForDeleted",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/Session.ts",
							"line": 2116,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 364,
							"name": "waitForDeleted",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Waits for all elements in the currently active window/frame to be\ndestroyed."
							},
							"parameters": [
								{
									"id": 365,
									"name": "using",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The element retrieval strategy to use. See\n[[Session.Session.find]] for options.\n"
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "class name"
											},
											{
												"type": "literal",
												"value": "id"
											},
											{
												"type": "literal",
												"value": "name"
											},
											{
												"type": "literal",
												"value": "partial link text"
											},
											{
												"type": "literal",
												"value": "tag name"
											},
											{
												"type": "literal",
												"value": "css selector"
											},
											{
												"type": "literal",
												"value": "link text"
											},
											{
												"type": "literal",
												"value": "xpath"
											}
										]
									}
								},
								{
									"id": 366,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The strategy-specific value to search for. See\n[[Session.Session.find]] for details.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"overwrites": {
								"type": "reference",
								"name": "Locator.waitForDeleted"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Locator.waitForDeleted"
					}
				},
				{
					"id": 451,
					"name": "waitForDeletedByClassName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 276,
							"character": 27
						}
					],
					"signatures": [
						{
							"id": 452,
							"name": "waitForDeletedByClassName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Waits for all elements inside this element matching the given CSS class\nname to be destroyed."
							},
							"parameters": [
								{
									"id": 453,
									"name": "className",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The CSS class name to search for.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.waitForDeletedByClassName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.waitForDeletedByClassName"
					}
				},
				{
					"id": 454,
					"name": "waitForDeletedByCssSelector",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 286,
							"character": 29
						}
					],
					"signatures": [
						{
							"id": 455,
							"name": "waitForDeletedByCssSelector",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Waits for all elements inside this element matching the given CSS\nselector to be destroyed."
							},
							"parameters": [
								{
									"id": 456,
									"name": "selector",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The CSS selector to search for.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.waitForDeletedByCssSelector"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.waitForDeletedByCssSelector"
					}
				},
				{
					"id": 457,
					"name": "waitForDeletedById",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 296,
							"character": 20
						}
					],
					"signatures": [
						{
							"id": 458,
							"name": "waitForDeletedById",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Waits for all elements inside this element matching the given ID to be\ndestroyed."
							},
							"parameters": [
								{
									"id": 459,
									"name": "id",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The ID of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.waitForDeletedById"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.waitForDeletedById"
					}
				},
				{
					"id": 463,
					"name": "waitForDeletedByLinkText",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 316,
							"character": 26
						}
					],
					"signatures": [
						{
							"id": 464,
							"name": "waitForDeletedByLinkText",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Waits for all elements inside this element matching the given\ncase-insensitive link text to be destroyed."
							},
							"parameters": [
								{
									"id": 465,
									"name": "text",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The link text of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.waitForDeletedByLinkText"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.waitForDeletedByLinkText"
					}
				},
				{
					"id": 460,
					"name": "waitForDeletedByName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 306,
							"character": 22
						}
					],
					"signatures": [
						{
							"id": 461,
							"name": "waitForDeletedByName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Waits for all elements inside this element matching the given name\nattribute to be destroyed."
							},
							"parameters": [
								{
									"id": 462,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The name of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.waitForDeletedByName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.waitForDeletedByName"
					}
				},
				{
					"id": 466,
					"name": "waitForDeletedByPartialLinkText",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 326,
							"character": 33
						}
					],
					"signatures": [
						{
							"id": 467,
							"name": "waitForDeletedByPartialLinkText",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Waits for all elements inside this element partially matching the given\ncase-insensitive link text to be destroyed."
							},
							"parameters": [
								{
									"id": 468,
									"name": "text",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The partial link text of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.waitForDeletedByPartialLinkText"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.waitForDeletedByPartialLinkText"
					}
				},
				{
					"id": 469,
					"name": "waitForDeletedByTagName",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 336,
							"character": 25
						}
					],
					"signatures": [
						{
							"id": 470,
							"name": "waitForDeletedByTagName",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Waits for all elements inside this element matching the given HTML tag\nname to be destroyed."
							},
							"parameters": [
								{
									"id": 471,
									"name": "tagName",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The tag name of the element.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.waitForDeletedByTagName"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.waitForDeletedByTagName"
					}
				},
				{
					"id": 472,
					"name": "waitForDeletedByXpath",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/lib/Locator.ts",
							"line": 346,
							"character": 23
						}
					],
					"signatures": [
						{
							"id": 473,
							"name": "waitForDeletedByXpath",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Waits for all elements inside this element matching the given XPath\nselector to be destroyed."
							},
							"parameters": [
								{
									"id": 474,
									"name": "path",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"text": "The XPath selector to search for.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "CancellablePromise"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "Locator.waitForDeletedByXpath"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"name": "Locator.waitForDeletedByXpath"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						64
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						81,
						85,
						83
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						250,
						154,
						218,
						333,
						349,
						263,
						165,
						152,
						220,
						338,
						354,
						252,
						272,
						297,
						134,
						139,
						227,
						231,
						406,
						409,
						415,
						412,
						418,
						421,
						424,
						382,
						385,
						388,
						394,
						391,
						397,
						400,
						403,
						359,
						427,
						430,
						433,
						439,
						436,
						442,
						445,
						448,
						303,
						125,
						235,
						148,
						245,
						121,
						323,
						146,
						321,
						213,
						123,
						119,
						367,
						372,
						313,
						335,
						327,
						341,
						318,
						240,
						377,
						223,
						225,
						351,
						343,
						357,
						112,
						204,
						181,
						175,
						130,
						128,
						150,
						300,
						210,
						285,
						254,
						277,
						237,
						266,
						325,
						132,
						281,
						269,
						106,
						94,
						100,
						215,
						369,
						374,
						315,
						329,
						242,
						379,
						345,
						115,
						196,
						188,
						167,
						157,
						163,
						160,
						144,
						274,
						289,
						247,
						363,
						451,
						454,
						457,
						463,
						460,
						466,
						469,
						472
					]
				}
			],
			"sources": [
				{
					"fileName": "src/Session.ts",
					"line": 26,
					"character": 28
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 1476,
							"typeArguments": [
								{
									"type": "reference",
									"id": 475,
									"name": "Element"
								}
							],
							"name": "CancellablePromise"
						},
						{
							"type": "reference",
							"id": 1476,
							"typeArguments": [
								{
									"type": "array",
									"elementType": {
										"type": "reference",
										"id": 475,
										"name": "Element"
									}
								}
							],
							"name": "CancellablePromise"
						},
						{
							"type": "reference",
							"id": 1476,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "void"
								}
							],
							"name": "CancellablePromise"
						}
					],
					"name": "Locator"
				}
			]
		},
		{
			"id": 1476,
			"name": "CancellablePromise",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExternal": true
			},
			"children": [
				{
					"id": 1503,
					"name": "[toStringTag]",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
							"line": 174,
							"character": 33
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Promise.__@toStringTag@49"
					}
				},
				{
					"id": 1477,
					"name": "cancel",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 1478,
							"name": "cancel",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1479,
					"name": "catch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 1480,
							"name": "catch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 1481,
									"name": "E",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							],
							"parameters": [
								{
									"id": 1482,
									"name": "onrejected",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1483,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 1484,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 1485,
																	"name": "reason",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"name": "E"
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "E"
																			}
																		],
																		"name": "PromiseLike"
																	}
																]
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "T"
											},
											{
												"type": "reference",
												"name": "E"
											}
										]
									}
								],
								"name": "CancellablePromise"
							},
							"overwrites": {
								"type": "reference",
								"name": "Promise.catch"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Promise.catch"
					}
				},
				{
					"id": 1486,
					"name": "finally",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 1487,
							"name": "finally",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"id": 1488,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1489,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 1490,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "reference",
										"name": "T"
									}
								],
								"name": "CancellablePromise"
							},
							"overwrites": {
								"type": "reference",
								"name": "Promise.finally"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Promise.finally"
					}
				},
				{
					"id": 1491,
					"name": "then",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExternal": true
					},
					"signatures": [
						{
							"id": 1492,
							"name": "then",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExternal": true
							},
							"typeParameter": [
								{
									"id": 1493,
									"name": "V",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "reference",
										"name": "T"
									}
								},
								{
									"id": 1494,
									"name": "E",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExternal": true
									},
									"default": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							],
							"parameters": [
								{
									"id": 1495,
									"name": "onfulfilled",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1496,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 1497,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 1498,
																	"name": "value",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "reference",
																		"name": "T"
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"name": "V"
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "V"
																			}
																		],
																		"name": "PromiseLike"
																	}
																]
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 1499,
									"name": "onrejected",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 1500,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExternal": true
													},
													"signatures": [
														{
															"id": 1501,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExternal": true
															},
															"parameters": [
																{
																	"id": 1502,
																	"name": "reason",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExternal": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"name": "E"
																	},
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "E"
																			}
																		],
																		"name": "PromiseLike"
																	}
																]
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "V"
											},
											{
												"type": "reference",
												"name": "E"
											}
										]
									}
								],
								"name": "CancellablePromise"
							},
							"overwrites": {
								"type": "reference",
								"name": "Promise.then"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Promise.then"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1503
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						1477,
						1479,
						1486,
						1491
					]
				}
			],
			"sources": [
				{
					"fileName": "node_modules/@theintern/common/lib/Task.d.ts",
					"line": 1,
					"character": 35
				}
			],
			"typeParameter": [
				{
					"id": 1504,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {
						"isExternal": true
					},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"name": "T"
						}
					],
					"name": "Promise"
				}
			]
		},
		{
			"id": 1505,
			"name": "Capabilities",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"comment": {
				"shortText": "These interface describes the capabilities that may be implemented by a\nWebDriver server. Many of these are standard\n[[https://github.com/SeleniumHQ/selenium/wiki/DesiredCapabilities|WebDriver capabilities]],\nbut the interface also includes a number of Leadfoot-specific feature and\ndefect indicators. For example, the [[interfaces.Capabilities.brokenClick]]\ncapability indicates that the remote doesn't properly support the 'click'\naction."
			},
			"children": [
				{
					"id": 1506,
					"name": "_filled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 16,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1507,
					"name": "applicationCacheEnabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether the session can interact with the remote browser's application\ncache."
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 22,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1508,
					"name": "brokenActiveElement",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The remote doesn't implement element/active"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 25,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1509,
					"name": "brokenClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The remote doesn't properly implement native mouse clicks"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 28,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1510,
					"name": "brokenComputedStyles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The remote may not return correct computed styles"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 31,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1511,
					"name": "brokenCookies",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Native cookie manipulation doesn't work"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 34,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1512,
					"name": "brokenCssTransformedSize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Transformed CSS sizes may be reported incorrectly"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 37,
							"character": 26
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1513,
					"name": "brokenDeleteCookie",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Native cookie deletion doesn't work"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 40,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1514,
					"name": "brokenDeleteWindow",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Native window deletion doesn't work"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 43,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1515,
					"name": "brokenDoubleClick",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The double-click event doesn't work"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 46,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1516,
					"name": "brokenElementDisplayedOffscreen",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 48,
							"character": 33
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1517,
					"name": "brokenElementDisplayedOpacity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 49,
							"character": 31
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1518,
					"name": "brokenElementEnabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 50,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1519,
					"name": "brokenElementPosition",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 51,
							"character": 23
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1520,
					"name": "brokenElementProperty",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 52,
							"character": 23
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1521,
					"name": "brokenElementSerialization",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 53,
							"character": 28
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1522,
					"name": "brokenEmptyPost",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 54,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1523,
					"name": "brokenExecuteElementReturn",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 55,
							"character": 28
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1524,
					"name": "brokenExecuteForNonHttpUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 56,
							"character": 28
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1525,
					"name": "brokenExecuteUndefinedReturn",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 57,
							"character": 30
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1526,
					"name": "brokenFileSendKeys",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 58,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1527,
					"name": "brokenFlickFinger",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 59,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1528,
					"name": "brokenHtmlMouseMove",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 60,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1529,
					"name": "brokenHtmlTagName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 61,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1530,
					"name": "brokenLinkTextLocator",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 62,
							"character": 23
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1531,
					"name": "brokenLongTap",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 63,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1532,
					"name": "brokenMouseEvents",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 64,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1533,
					"name": "brokenMoveFinger",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 65,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1534,
					"name": "brokenNavigation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 66,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1535,
					"name": "brokenNullGetSpecAttribute",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 67,
							"character": 28
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1536,
					"name": "brokenOptionSelect",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 68,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1537,
					"name": "brokenPageSource",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 69,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1538,
					"name": "brokenParentFrameSwitch",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 70,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1539,
					"name": "brokenRefresh",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 71,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1540,
					"name": "brokenSendKeys",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 72,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1541,
					"name": "brokenSessionList",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 73,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1542,
					"name": "brokenSubmitElement",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 74,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1543,
					"name": "brokenTouchScroll",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 75,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1544,
					"name": "brokenVisibleText",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "\"Visible\" text includes text that should be hidden"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 78,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1545,
					"name": "brokenWhitespaceNormalization",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 80,
							"character": 31
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1546,
					"name": "brokenWindowClose",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 81,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1547,
					"name": "brokenWindowPosition",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 82,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1548,
					"name": "brokenWindowSize",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 83,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1549,
					"name": "brokenWindowSwitch",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 84,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1550,
					"name": "brokenZeroTimeout",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 85,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1551,
					"name": "browserName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The name of the remote browser (e.g., 'safari')"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 88,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1552,
					"name": "browserVersion",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The remote browser version. This may or may not correspond to the\npublicly visible version."
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 94,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1553,
					"name": "deviceName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The name of the remote mobile device"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 99,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1554,
					"name": "dynamicViewport",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether the remote browser can be resized"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 102,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1555,
					"name": "fixSessionCapabilities",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether or not to run capability tests"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 105,
							"character": 24
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "no-detect"
							}
						]
					}
				},
				{
					"id": 1556,
					"name": "fixedLogTypes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The actual log types supported by a remote"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 108,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": false
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"id": 1476,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "CancellablePromise"
							}
						]
					}
				},
				{
					"id": 1557,
					"name": "handlesAlerts",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether the remote can handle modal alerts"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 111,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1558,
					"name": "hasTouchScreen",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether the remote has a touch screen"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 114,
							"character": 16
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1559,
					"name": "initialBrowserUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Allows the user to specify the initial URL loaded when IE starts."
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 117,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1560,
					"name": "locationContextEnabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether the session can set and query the browser's location context."
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 120,
							"character": 24
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1561,
					"name": "mouseEnabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether mouse actions are enabled"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 123,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1562,
					"name": "nativeEvents",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether the remote browser supports native events"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 126,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1563,
					"name": "noElementDisplayed",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "If true, the remote doesn't support the JWP /displayed endpoint"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 129,
							"character": 20
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1564,
					"name": "noElementEquals",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "If true, the remote doesn't support the JWP /equals endpoint"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 132,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1565,
					"name": "noKeysCommand",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "If true, the remote doesn't support the JWP /keys endpoint"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 135,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1566,
					"name": "platform",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The base platform the remote browser is running on, typically one of\nWINDOWS, XP, VISTA, MAC, LINUX, UNIX, ANDROID."
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 141,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1567,
					"name": "platformName",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The platform the remote browser is running on. This is typically more\nspecifc than [[interfaces.Capabilities.platform]]."
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 147,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1568,
					"name": "platformVersion",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The version of the platform the remote browser is runnign no."
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 152,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1569,
					"name": "remoteFiles",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether the remote browser supports file uploads"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 157,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1570,
					"name": "returnsFromClickImmediately",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether the remote browser returns immediately after a click or waits\nfor the click action to occur"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 163,
							"character": 29
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1571,
					"name": "rotatable",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether the remote viewport is rotatable between portrait and landscape\nviews"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 169,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1572,
					"name": "scriptedParentFrameCrashesBrowser",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "This indicates that trying to return a reference to a parent frame from\na script will crash the remote browser"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 175,
							"character": 35
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1573,
					"name": "shortcutKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The [[keys.keys|key]] used to run shortcuts, typically Cmd (Mac) or Control\n(Windows, Linux)"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 181,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 1574,
					"name": "supportsCssTransforms",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether the remote browser supports CSS transforms"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 184,
							"character": 23
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1575,
					"name": "supportsExecuteAsync",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether scripts can be executed asynchronously in the remote browser"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 187,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1576,
					"name": "supportsGetTimeouts",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether the server supports the GET /timeouts endpoint"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 190,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1577,
					"name": "supportsNavigationDataUris",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether the remote browser allows navigation via data URIs"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 193,
							"character": 28
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1578,
					"name": "supportsSessionCommands",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether the remote supports session commands"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 196,
							"character": 25
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1579,
					"name": "takesScreenshot",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether the remote browser can take screenshots"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 199,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1580,
					"name": "touchEnabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether the remote browser supports touch events"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 202,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1581,
					"name": "usesFlatKeysArray",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether the remote server requires element keys to be sent as a flat array"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 207,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1582,
					"name": "usesHandleParameter",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether window commands use 'handle' instead of 'name'"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 210,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1585,
					"name": "usesWebDriverActiveElement",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether getActiveElement uses a POST or GET"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 221,
							"character": 28
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1583,
					"name": "usesWebDriverElementAttribute",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether the Element '/attribute' endpoint uses W3C semantics"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 213,
							"character": 31
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1584,
					"name": "usesWebDriverElementValue",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether the Element '/value' endpoint uses a 'text' property"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 216,
							"character": 27
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1586,
					"name": "usesWebDriverExecuteASync",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether the remote uses `/execute/async` rathern than `/execute_async` for\nasynchronous execution"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 227,
							"character": 27
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1587,
					"name": "usesWebDriverExecuteSync",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether the remote uses `/execute/sync` rathern than `/execute` for\nsynchronous execution"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 233,
							"character": 26
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1588,
					"name": "usesWebDriverLocators",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether find commands should use WebDriver (vs JsonWireProtocol) locators"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 238,
							"character": 23
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1589,
					"name": "usesWebDriverTimeouts",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether the remote browser uses WebDriver-style timeouts"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 243,
							"character": 23
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1591,
					"name": "usesWebDriverWindowCommands",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether the remote browser uses WebDriver-style window commands (/rect, implicit handles)"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 253,
							"character": 29
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1590,
					"name": "usesWebDriverWindowHandleCommands",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether the remote browser uses WebDriver-style window handle command (/window)"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 248,
							"character": 35
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1592,
					"name": "version",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "The remote browser version"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 256,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1593,
					"name": "webStorageEnabled",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"comment": {
						"shortText": "Whether the session supports interactions with storage objects"
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 259,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1506,
						1507,
						1508,
						1509,
						1510,
						1511,
						1512,
						1513,
						1514,
						1515,
						1516,
						1517,
						1518,
						1519,
						1520,
						1521,
						1522,
						1523,
						1524,
						1525,
						1526,
						1527,
						1528,
						1529,
						1530,
						1531,
						1532,
						1533,
						1534,
						1535,
						1536,
						1537,
						1538,
						1539,
						1540,
						1541,
						1542,
						1543,
						1544,
						1545,
						1546,
						1547,
						1548,
						1549,
						1550,
						1551,
						1552,
						1553,
						1554,
						1555,
						1556,
						1557,
						1558,
						1559,
						1560,
						1561,
						1562,
						1563,
						1564,
						1565,
						1566,
						1567,
						1568,
						1569,
						1570,
						1571,
						1572,
						1573,
						1574,
						1575,
						1576,
						1577,
						1578,
						1579,
						1580,
						1581,
						1582,
						1585,
						1583,
						1584,
						1586,
						1587,
						1588,
						1589,
						1591,
						1590,
						1592,
						1593
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces.ts",
					"line": 15,
					"character": 29
				}
			],
			"indexSignature": {
				"id": 1594,
				"name": "__index",
				"kind": 8192,
				"kindString": "Index signature",
				"flags": {},
				"parameters": [
					{
						"id": 1595,
						"name": "key",
						"kind": 32768,
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "intrinsic",
					"name": "any"
				}
			}
		},
		{
			"id": 1596,
			"name": "Geolocation",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 1597,
					"name": "altitude",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 265,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1598,
					"name": "latitude",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 266,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1599,
					"name": "longitude",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 267,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1597,
						1598,
						1599
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces.ts",
					"line": 264,
					"character": 28
				}
			]
		},
		{
			"id": 1626,
			"name": "LeadfootError",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 1631,
					"name": "message",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 974,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Error.message"
					}
				},
				{
					"id": 1630,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 973,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Error.name"
					}
				},
				{
					"id": 1627,
					"name": "response",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 292,
							"character": 10
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1628,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 1629,
									"name": "text",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "src/interfaces.ts",
											"line": 292,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"kind": 1024,
									"children": [
										1629
									]
								}
							]
						}
					}
				},
				{
					"id": 1632,
					"name": "stack",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/typescript/lib/lib.es5.d.ts",
							"line": 975,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "Error.stack"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1631,
						1630,
						1627,
						1632
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces.ts",
					"line": 291,
					"character": 30
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "Error"
				}
			]
		},
		{
			"id": 1611,
			"name": "LeadfootURL",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 1614,
					"name": "accessKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 288,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1615,
					"name": "auth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/url.d.ts",
							"line": 7,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "UrlObject.auth"
					}
				},
				{
					"id": 1616,
					"name": "hash",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/url.d.ts",
							"line": 8,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "UrlObject.hash"
					}
				},
				{
					"id": 1617,
					"name": "host",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/url.d.ts",
							"line": 9,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "UrlObject.host"
					}
				},
				{
					"id": 1618,
					"name": "hostname",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/url.d.ts",
							"line": 10,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "UrlObject.hostname"
					}
				},
				{
					"id": 1619,
					"name": "href",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/url.d.ts",
							"line": 11,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "UrlObject.href"
					}
				},
				{
					"id": 1613,
					"name": "password",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 287,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1620,
					"name": "pathname",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/url.d.ts",
							"line": 12,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "UrlObject.pathname"
					}
				},
				{
					"id": 1624,
					"name": "port",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/url.d.ts",
							"line": 16,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "UrlObject.port"
					}
				},
				{
					"id": 1621,
					"name": "protocol",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/url.d.ts",
							"line": 13,
							"character": 16
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "UrlObject.protocol"
					}
				},
				{
					"id": 1625,
					"name": "query",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/url.d.ts",
							"line": 17,
							"character": 13
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"name": "ParsedUrlQueryInput"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "UrlObject.query"
					}
				},
				{
					"id": 1622,
					"name": "search",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/url.d.ts",
							"line": 14,
							"character": 14
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "UrlObject.search"
					}
				},
				{
					"id": 1623,
					"name": "slashes",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/node/url.d.ts",
							"line": 15,
							"character": 15
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"name": "UrlObject.slashes"
					}
				},
				{
					"id": 1612,
					"name": "username",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 286,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1614,
						1615,
						1616,
						1617,
						1618,
						1619,
						1613,
						1620,
						1624,
						1621,
						1625,
						1622,
						1623,
						1612
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces.ts",
					"line": 285,
					"character": 28
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"name": "UrlObject"
				}
			]
		},
		{
			"id": 1600,
			"name": "LogEntry",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 1602,
					"name": "level",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 272,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1603,
					"name": "message",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 273,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1601,
					"name": "timestamp",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 271,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1602,
						1603,
						1601
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces.ts",
					"line": 270,
					"character": 25
				}
			]
		},
		{
			"id": 1455,
			"name": "RequestOptions",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExternal": true
			},
			"children": [
				{
					"id": 1456,
					"name": "data",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/request.d.ts",
							"line": 4,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 1457,
					"name": "followRedirects",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/request.d.ts",
							"line": 5,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1458,
					"name": "handleAs",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/request.d.ts",
							"line": 6,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "json"
							}
						]
					}
				},
				{
					"id": 1459,
					"name": "headers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/request.d.ts",
							"line": 7,
							"character": 11
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1460,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExternal": true
							},
							"indexSignature": {
								"id": 1461,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {
									"isExternal": true
								},
								"parameters": [
									{
										"id": 1462,
										"name": "key",
										"kind": 32768,
										"flags": {
											"isExternal": true
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "number"
										}
									]
								}
							}
						}
					}
				},
				{
					"id": 1463,
					"name": "method",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/request.d.ts",
							"line": 10,
							"character": 10
						}
					],
					"type": {
						"type": "reference",
						"name": "RequestMethod"
					}
				},
				{
					"id": 1472,
					"name": "onDownloadProgress",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/request.d.ts",
							"line": 18,
							"character": 22
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1473,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExternal": true
							},
							"signatures": [
								{
									"id": 1474,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {
										"isExternal": true
									},
									"parameters": [
										{
											"id": 1475,
											"name": "progressEvent",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 1464,
					"name": "password",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/request.d.ts",
							"line": 11,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1469,
					"name": "proxy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/request.d.ts",
							"line": 15,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1465,
					"name": "query",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/request.d.ts",
							"line": 12,
							"character": 9
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 1466,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExternal": true
									},
									"indexSignature": {
										"id": 1467,
										"name": "__index",
										"kind": 8192,
										"kindString": "Index signature",
										"flags": {
											"isExternal": true
										},
										"parameters": [
											{
												"id": 1468,
												"name": "key",
												"kind": 32768,
												"flags": {
													"isExternal": true
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							}
						]
					}
				},
				{
					"id": 1470,
					"name": "user",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/request.d.ts",
							"line": 16,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1471,
					"name": "username",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/@theintern/common/lib/request.d.ts",
							"line": 17,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1456,
						1457,
						1458,
						1459,
						1463,
						1472,
						1464,
						1469,
						1465,
						1470,
						1471
					]
				}
			],
			"sources": [
				{
					"fileName": "node_modules/@theintern/common/lib/request.d.ts",
					"line": 3,
					"character": 31
				}
			]
		},
		{
			"id": 1604,
			"name": "WebDriverCookie",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 1608,
					"name": "domain",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 280,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1610,
					"name": "expiry",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 282,
							"character": 8
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"name": "Date"
							}
						]
					}
				},
				{
					"id": 1605,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 277,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1607,
					"name": "path",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 279,
							"character": 6
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1609,
					"name": "secure",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 281,
							"character": 8
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1606,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 278,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1608,
						1610,
						1605,
						1607,
						1609,
						1606
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces.ts",
					"line": 276,
					"character": 32
				}
			]
		},
		{
			"id": 1633,
			"name": "WebDriverResponse",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 1634,
					"name": "value",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "src/interfaces.ts",
							"line": 296,
							"character": 7
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						1634
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces.ts",
					"line": 295,
					"character": 34
				}
			]
		},
		{
			"id": 1454,
			"name": "Strategy",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/Locator.ts",
					"line": 376,
					"character": 20
				}
			],
			"type": {
				"type": "typeOperator",
				"operator": "keyof",
				"target": {
					"type": "query",
					"queryType": {
						"type": "reference",
						"name": "strategies"
					}
				}
			}
		},
		{
			"id": 1123,
			"name": "keys",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isConst": true
			},
			"comment": {
				"shortText": "A list of special keys that can be used with the `pressKeys` and `type`\nfunctions.",
				"text": "See [[Session.Session.pressKeys]] for usage details.\n"
			},
			"sources": [
				{
					"fileName": "src/keys.ts",
					"line": 10,
					"character": 10
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1124,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 1162,
							"name": "ADD",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE025'"
						},
						{
							"id": 1135,
							"name": "ALT",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE00A'"
						},
						{
							"id": 1146,
							"name": "ARROW_DOWN",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE015'"
						},
						{
							"id": 1143,
							"name": "ARROW_LEFT",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE012'"
						},
						{
							"id": 1145,
							"name": "ARROW_RIGHT",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE014'"
						},
						{
							"id": 1144,
							"name": "ARROW_UP",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE013'"
						},
						{
							"id": 1128,
							"name": "BACKSPACE",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE003'"
						},
						{
							"id": 1126,
							"name": "CANCEL",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE001'"
						},
						{
							"id": 1130,
							"name": "CLEAR",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE005'"
						},
						{
							"id": 1180,
							"name": "COMMAND",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE03D'"
						},
						{
							"id": 1134,
							"name": "CONTROL",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE009'"
						},
						{
							"id": 1165,
							"name": "DECIMAL",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE028'"
						},
						{
							"id": 1148,
							"name": "DELETE",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE017'"
						},
						{
							"id": 1166,
							"name": "DIVIDE",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE029'"
						},
						{
							"id": 1141,
							"name": "END",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE010'"
						},
						{
							"id": 1132,
							"name": "ENTER",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE007'"
						},
						{
							"id": 1150,
							"name": "EQUALS",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE019'"
						},
						{
							"id": 1137,
							"name": "ESCAPE",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE00C'"
						},
						{
							"id": 1167,
							"name": "F1",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE031'"
						},
						{
							"id": 1176,
							"name": "F10",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE03A'"
						},
						{
							"id": 1177,
							"name": "F11",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE03B'"
						},
						{
							"id": 1178,
							"name": "F12",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE03C'"
						},
						{
							"id": 1168,
							"name": "F2",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE032'"
						},
						{
							"id": 1169,
							"name": "F3",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE033'"
						},
						{
							"id": 1170,
							"name": "F4",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE034'"
						},
						{
							"id": 1171,
							"name": "F5",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE035'"
						},
						{
							"id": 1172,
							"name": "F6",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE036'"
						},
						{
							"id": 1173,
							"name": "F7",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE037'"
						},
						{
							"id": 1174,
							"name": "F8",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE038'"
						},
						{
							"id": 1175,
							"name": "F9",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE039'"
						},
						{
							"id": 1127,
							"name": "HELP",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE002'"
						},
						{
							"id": 1142,
							"name": "HOME",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE011'"
						},
						{
							"id": 1147,
							"name": "INSERT",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE016'"
						},
						{
							"id": 1179,
							"name": "META",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE03D'"
						},
						{
							"id": 1161,
							"name": "MULTIPLY",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE024'"
						},
						{
							"id": 1125,
							"name": "NULL",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE000'"
						},
						{
							"id": 1151,
							"name": "NUMPAD0",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE01A'"
						},
						{
							"id": 1152,
							"name": "NUMPAD1",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE01B'"
						},
						{
							"id": 1153,
							"name": "NUMPAD2",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE01C'"
						},
						{
							"id": 1154,
							"name": "NUMPAD3",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE01D'"
						},
						{
							"id": 1155,
							"name": "NUMPAD4",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE01E'"
						},
						{
							"id": 1156,
							"name": "NUMPAD5",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE01F'"
						},
						{
							"id": 1157,
							"name": "NUMPAD6",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE020'"
						},
						{
							"id": 1158,
							"name": "NUMPAD7",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE021'"
						},
						{
							"id": 1159,
							"name": "NUMPAD8",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE022'"
						},
						{
							"id": 1160,
							"name": "NUMPAD9",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE023'"
						},
						{
							"id": 1140,
							"name": "PAGE_DOWN",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE00F'"
						},
						{
							"id": 1139,
							"name": "PAGE_UP",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE00E'"
						},
						{
							"id": 1136,
							"name": "PAUSE",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE00B'"
						},
						{
							"id": 1131,
							"name": "RETURN",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE006'"
						},
						{
							"id": 1149,
							"name": "SEMICOLON",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE018'"
						},
						{
							"id": 1163,
							"name": "SEPARATOR",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE026'"
						},
						{
							"id": 1133,
							"name": "SHIFT",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE008'"
						},
						{
							"id": 1138,
							"name": "SPACE",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE00D'"
						},
						{
							"id": 1164,
							"name": "SUBTRACT",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE027'"
						},
						{
							"id": 1129,
							"name": "TAB",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE004'"
						},
						{
							"id": 1181,
							"name": "ZENKAKU_HANKAKU",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'\\uE040'"
						},
						{
							"id": 1182,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'NULL'"
						},
						{
							"id": 1183,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Cancel'"
						},
						{
							"id": 1184,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Help'"
						},
						{
							"id": 1185,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Backspace'"
						},
						{
							"id": 1186,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Tab'"
						},
						{
							"id": 1187,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Clear'"
						},
						{
							"id": 1188,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Return'"
						},
						{
							"id": 1189,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Enter'"
						},
						{
							"id": 1190,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Shift'"
						},
						{
							"id": 1191,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Control'"
						},
						{
							"id": 1192,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Alt'"
						},
						{
							"id": 1193,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Pause'"
						},
						{
							"id": 1194,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Escape'"
						},
						{
							"id": 1195,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Space'"
						},
						{
							"id": 1196,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Page up'"
						},
						{
							"id": 1197,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Page down'"
						},
						{
							"id": 1198,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'End'"
						},
						{
							"id": 1199,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Home'"
						},
						{
							"id": 1200,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Left arrow'"
						},
						{
							"id": 1201,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Up arrow'"
						},
						{
							"id": 1202,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Right arrow'"
						},
						{
							"id": 1203,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Down arrow'"
						},
						{
							"id": 1204,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Insert'"
						},
						{
							"id": 1205,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Delete'"
						},
						{
							"id": 1206,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Semicolon'"
						},
						{
							"id": 1207,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Equals'"
						},
						{
							"id": 1208,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Numpad 0'"
						},
						{
							"id": 1209,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Numpad 1'"
						},
						{
							"id": 1210,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Numpad 2'"
						},
						{
							"id": 1211,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Numpad 3'"
						},
						{
							"id": 1212,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Numpad 4'"
						},
						{
							"id": 1213,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Numpad 5'"
						},
						{
							"id": 1214,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Numpad 6'"
						},
						{
							"id": 1215,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Numpad 7'"
						},
						{
							"id": 1216,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Numpad 8'"
						},
						{
							"id": 1217,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Numpad 9'"
						},
						{
							"id": 1218,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Multiply'"
						},
						{
							"id": 1219,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Add'"
						},
						{
							"id": 1220,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Separator'"
						},
						{
							"id": 1221,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Subtract'"
						},
						{
							"id": 1222,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Decimal'"
						},
						{
							"id": 1223,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Divide'"
						},
						{
							"id": 1224,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'F1'"
						},
						{
							"id": 1225,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'F2'"
						},
						{
							"id": 1226,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'F3'"
						},
						{
							"id": 1227,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'F4'"
						},
						{
							"id": 1228,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'F5'"
						},
						{
							"id": 1229,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'F6'"
						},
						{
							"id": 1230,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'F7'"
						},
						{
							"id": 1231,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'F8'"
						},
						{
							"id": 1232,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'F9'"
						},
						{
							"id": 1233,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'F10'"
						},
						{
							"id": 1234,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'F11'"
						},
						{
							"id": 1235,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'F12'"
						},
						{
							"id": 1236,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Command'"
						},
						{
							"id": 1237,
							"name": "",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "'Zenkaku/hankaku'"
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								1162,
								1135,
								1146,
								1143,
								1145,
								1144,
								1128,
								1126,
								1130,
								1180,
								1134,
								1165,
								1148,
								1166,
								1141,
								1132,
								1150,
								1137,
								1167,
								1176,
								1177,
								1178,
								1168,
								1169,
								1170,
								1171,
								1172,
								1173,
								1174,
								1175,
								1127,
								1142,
								1147,
								1179,
								1161,
								1125,
								1151,
								1152,
								1153,
								1154,
								1155,
								1156,
								1157,
								1158,
								1159,
								1160,
								1140,
								1139,
								1136,
								1131,
								1149,
								1163,
								1133,
								1138,
								1164,
								1129,
								1181,
								1182,
								1183,
								1184,
								1185,
								1186,
								1187,
								1188,
								1189,
								1190,
								1191,
								1192,
								1193,
								1194,
								1195,
								1196,
								1197,
								1198,
								1199,
								1200,
								1201,
								1202,
								1203,
								1204,
								1205,
								1206,
								1207,
								1208,
								1209,
								1210,
								1211,
								1212,
								1213,
								1214,
								1215,
								1216,
								1217,
								1218,
								1219,
								1220,
								1221,
								1222,
								1223,
								1224,
								1225,
								1226,
								1227,
								1228,
								1229,
								1230,
								1231,
								1232,
								1233,
								1234,
								1235,
								1236,
								1237
							]
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 1238,
			"name": "pollUntil",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/helpers/pollUntil.ts",
					"line": 65,
					"character": 33
				}
			],
			"signatures": [
				{
					"id": 1239,
					"name": "pollUntil",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "A [[Command]] helper that polls for a value within the client environment\nuntil the value exists or a timeout is reached.",
						"text": "```js\nimport Command from 'leadfoot/Command';\nimport pollUntil from 'leadfoot/helpers/pollUntil';\n\nnew Command(session)\n    .get('http://example.com')\n    .then(pollUntil('return document.getElementById(\"a\");', 1000))\n    .then(\n        elementA => {\n            // element was found\n        },\n        error => {\n            // element was not found\n        }\n    );\n```\n\n```js\nimport Command from 'leadfoot/Command';\nimport pollUntil from 'leadfoot/helpers/pollUntil';\n\nnew Command(session)\n    .get('http://example.com')\n    .then(pollUntil(value => {\n        const element = document.getElementById('a');\n        return element && element.value === value ? true : null;\n    }, [ 'foo' ], 1000))\n    .then(\n        () => {\n            // value was set to 'foo'\n        },\n        error => {\n            // value was never set\n        }\n    );\n```\n",
						"returns": "A [[Command]] callback function that, when called, returns a\npromise that resolves to the value returned by the poller function on\nsuccess and rejects on failure.\n"
					},
					"typeParameter": [
						{
							"id": 1240,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1241,
							"name": "poller",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"text": "The poller function to execute on an interval. The function\nshould return `null` or `undefined` if there is not a result. If the poller\nfunction throws, polling will halt.\n"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1242,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/helpers/pollUntil.ts",
													"line": 66,
													"character": 11
												}
											],
											"signatures": [
												{
													"id": 1243,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1244,
							"name": "timeout",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"text": "The maximum amount of time to wait for a successful result,\nin milliseconds. If not specified, the current `executeAsync` maximum\ntimeout for the session will be used.\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1245,
							"name": "pollInterval",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"text": "The amount of time to wait between calls to the poller\nfunction, in milliseconds. If not specified, defaults to 67ms.\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1246,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/helpers/pollUntil.ts",
									"line": 69,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 1247,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1476,
										"typeArguments": [
											{
												"type": "reference",
												"name": "T"
											}
										],
										"name": "CancellablePromise"
									}
								}
							]
						}
					}
				},
				{
					"id": 1248,
					"name": "pollUntil",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 1249,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1250,
							"name": "poller",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1251,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 1252,
							"name": "timeout",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1253,
							"name": "pollInterval",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1254,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/helpers/pollUntil.ts",
									"line": 76,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 1255,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1476,
										"typeArguments": [
											{
												"type": "reference",
												"name": "T"
											}
										],
										"name": "CancellablePromise"
									}
								}
							]
						}
					}
				},
				{
					"id": 1256,
					"name": "pollUntil",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 1257,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1258,
							"name": "poller",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1259,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "src/helpers/pollUntil.ts",
											"line": 79,
											"character": 9
										}
									],
									"signatures": [
										{
											"id": 1260,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									]
								}
							}
						},
						{
							"id": 1261,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "never"
								}
							}
						},
						{
							"id": 1262,
							"name": "timeout",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1263,
							"name": "pollInterval",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1264,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/helpers/pollUntil.ts",
									"line": 83,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 1265,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1476,
										"typeArguments": [
											{
												"type": "reference",
												"name": "T"
											}
										],
										"name": "CancellablePromise"
									}
								}
							]
						}
					}
				},
				{
					"id": 1266,
					"name": "pollUntil",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 1267,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1268,
							"name": "U",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1269,
							"name": "poller",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1270,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "src/helpers/pollUntil.ts",
											"line": 86,
											"character": 9
										}
									],
									"signatures": [
										{
											"id": 1271,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1272,
													"name": "u",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "U"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									]
								}
							}
						},
						{
							"id": 1273,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "reference",
										"name": "U"
									}
								]
							}
						},
						{
							"id": 1274,
							"name": "timeout",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1275,
							"name": "pollInterval",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1276,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/helpers/pollUntil.ts",
									"line": 90,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 1277,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1476,
										"typeArguments": [
											{
												"type": "reference",
												"name": "T"
											}
										],
										"name": "CancellablePromise"
									}
								}
							]
						}
					}
				},
				{
					"id": 1278,
					"name": "pollUntil",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 1279,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1280,
							"name": "U",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1281,
							"name": "V",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1282,
							"name": "poller",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1283,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "src/helpers/pollUntil.ts",
											"line": 93,
											"character": 9
										}
									],
									"signatures": [
										{
											"id": 1284,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1285,
													"name": "u",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "U"
													}
												},
												{
													"id": 1286,
													"name": "v",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "V"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									]
								}
							}
						},
						{
							"id": 1287,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "reference",
										"name": "U"
									},
									{
										"type": "reference",
										"name": "V"
									}
								]
							}
						},
						{
							"id": 1288,
							"name": "timeout",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1289,
							"name": "pollInterval",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1290,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/helpers/pollUntil.ts",
									"line": 97,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 1291,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1476,
										"typeArguments": [
											{
												"type": "reference",
												"name": "T"
											}
										],
										"name": "CancellablePromise"
									}
								}
							]
						}
					}
				},
				{
					"id": 1292,
					"name": "pollUntil",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 1293,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1294,
							"name": "U",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1295,
							"name": "V",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1296,
							"name": "W",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1297,
							"name": "poller",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1298,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "src/helpers/pollUntil.ts",
											"line": 100,
											"character": 9
										}
									],
									"signatures": [
										{
											"id": 1299,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1300,
													"name": "u",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "U"
													}
												},
												{
													"id": 1301,
													"name": "v",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "V"
													}
												},
												{
													"id": 1302,
													"name": "w",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "W"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									]
								}
							}
						},
						{
							"id": 1303,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "reference",
										"name": "U"
									},
									{
										"type": "reference",
										"name": "V"
									},
									{
										"type": "reference",
										"name": "W"
									}
								]
							}
						},
						{
							"id": 1304,
							"name": "timeout",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1305,
							"name": "pollInterval",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1306,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/helpers/pollUntil.ts",
									"line": 104,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 1307,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1476,
										"typeArguments": [
											{
												"type": "reference",
												"name": "T"
											}
										],
										"name": "CancellablePromise"
									}
								}
							]
						}
					}
				},
				{
					"id": 1308,
					"name": "pollUntil",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 1309,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1310,
							"name": "U",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1311,
							"name": "V",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1312,
							"name": "W",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1313,
							"name": "X",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1314,
							"name": "poller",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1315,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "src/helpers/pollUntil.ts",
											"line": 107,
											"character": 9
										}
									],
									"signatures": [
										{
											"id": 1316,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1317,
													"name": "u",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "U"
													}
												},
												{
													"id": 1318,
													"name": "v",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "V"
													}
												},
												{
													"id": 1319,
													"name": "w",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "W"
													}
												},
												{
													"id": 1320,
													"name": "x",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "X"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									]
								}
							}
						},
						{
							"id": 1321,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "reference",
										"name": "U"
									},
									{
										"type": "reference",
										"name": "V"
									},
									{
										"type": "reference",
										"name": "W"
									},
									{
										"type": "reference",
										"name": "X"
									}
								]
							}
						},
						{
							"id": 1322,
							"name": "timeout",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1323,
							"name": "pollInterval",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1324,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/helpers/pollUntil.ts",
									"line": 111,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 1325,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1476,
										"typeArguments": [
											{
												"type": "reference",
												"name": "T"
											}
										],
										"name": "CancellablePromise"
									}
								}
							]
						}
					}
				},
				{
					"id": 1326,
					"name": "pollUntil",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 1327,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1328,
							"name": "U",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1329,
							"name": "V",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1330,
							"name": "W",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1331,
							"name": "X",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1332,
							"name": "Y",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1333,
							"name": "poller",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1334,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "src/helpers/pollUntil.ts",
											"line": 114,
											"character": 9
										}
									],
									"signatures": [
										{
											"id": 1335,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1336,
													"name": "u",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "U"
													}
												},
												{
													"id": 1337,
													"name": "v",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "V"
													}
												},
												{
													"id": 1338,
													"name": "w",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "W"
													}
												},
												{
													"id": 1339,
													"name": "x",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "X"
													}
												},
												{
													"id": 1340,
													"name": "y",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Y"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									]
								}
							}
						},
						{
							"id": 1341,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "reference",
										"name": "U"
									},
									{
										"type": "reference",
										"name": "V"
									},
									{
										"type": "reference",
										"name": "W"
									},
									{
										"type": "reference",
										"name": "X"
									},
									{
										"type": "reference",
										"name": "Y"
									}
								]
							}
						},
						{
							"id": 1342,
							"name": "timeout",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1343,
							"name": "pollInterval",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1344,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/helpers/pollUntil.ts",
									"line": 118,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 1345,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1476,
										"typeArguments": [
											{
												"type": "reference",
												"name": "T"
											}
										],
										"name": "CancellablePromise"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 1346,
			"name": "pollUntilTruthy",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/helpers/pollUntilTruthy.ts",
					"line": 5,
					"character": 39
				}
			],
			"signatures": [
				{
					"id": 1347,
					"name": "pollUntilTruthy",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 1348,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1349,
							"name": "poller",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1350,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "src/helpers/pollUntilTruthy.ts",
													"line": 6,
													"character": 11
												}
											],
											"signatures": [
												{
													"id": 1351,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 1352,
							"name": "timeout",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1353,
							"name": "pollInterval",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1354,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/helpers/pollUntilTruthy.ts",
									"line": 9,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 1355,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1476,
										"typeArguments": [
											{
												"type": "reference",
												"name": "T"
											}
										],
										"name": "CancellablePromise"
									}
								}
							]
						}
					}
				},
				{
					"id": 1356,
					"name": "pollUntilTruthy",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 1357,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1358,
							"name": "poller",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1359,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 1360,
							"name": "timeout",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1361,
							"name": "pollInterval",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1362,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/helpers/pollUntilTruthy.ts",
									"line": 16,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 1363,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1476,
										"typeArguments": [
											{
												"type": "reference",
												"name": "T"
											}
										],
										"name": "CancellablePromise"
									}
								}
							]
						}
					}
				},
				{
					"id": 1364,
					"name": "pollUntilTruthy",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 1365,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1366,
							"name": "poller",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1367,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "src/helpers/pollUntilTruthy.ts",
											"line": 19,
											"character": 9
										}
									],
									"signatures": [
										{
											"id": 1368,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									]
								}
							}
						},
						{
							"id": 1369,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "never"
								}
							}
						},
						{
							"id": 1370,
							"name": "timeout",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1371,
							"name": "pollInterval",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1372,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/helpers/pollUntilTruthy.ts",
									"line": 23,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 1373,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1476,
										"typeArguments": [
											{
												"type": "reference",
												"name": "T"
											}
										],
										"name": "CancellablePromise"
									}
								}
							]
						}
					}
				},
				{
					"id": 1374,
					"name": "pollUntilTruthy",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 1375,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1376,
							"name": "U",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1377,
							"name": "poller",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1378,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "src/helpers/pollUntilTruthy.ts",
											"line": 26,
											"character": 9
										}
									],
									"signatures": [
										{
											"id": 1379,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1380,
													"name": "u",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "U"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									]
								}
							}
						},
						{
							"id": 1381,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "reference",
										"name": "U"
									}
								]
							}
						},
						{
							"id": 1382,
							"name": "timeout",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1383,
							"name": "pollInterval",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1384,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/helpers/pollUntilTruthy.ts",
									"line": 30,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 1385,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1476,
										"typeArguments": [
											{
												"type": "reference",
												"name": "T"
											}
										],
										"name": "CancellablePromise"
									}
								}
							]
						}
					}
				},
				{
					"id": 1386,
					"name": "pollUntilTruthy",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 1387,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1388,
							"name": "U",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1389,
							"name": "V",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1390,
							"name": "poller",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1391,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "src/helpers/pollUntilTruthy.ts",
											"line": 33,
											"character": 9
										}
									],
									"signatures": [
										{
											"id": 1392,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1393,
													"name": "u",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "U"
													}
												},
												{
													"id": 1394,
													"name": "v",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "V"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									]
								}
							}
						},
						{
							"id": 1395,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "reference",
										"name": "U"
									},
									{
										"type": "reference",
										"name": "V"
									}
								]
							}
						},
						{
							"id": 1396,
							"name": "timeout",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1397,
							"name": "pollInterval",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1398,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/helpers/pollUntilTruthy.ts",
									"line": 37,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 1399,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1476,
										"typeArguments": [
											{
												"type": "reference",
												"name": "T"
											}
										],
										"name": "CancellablePromise"
									}
								}
							]
						}
					}
				},
				{
					"id": 1400,
					"name": "pollUntilTruthy",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 1401,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1402,
							"name": "U",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1403,
							"name": "V",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1404,
							"name": "W",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1405,
							"name": "poller",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1406,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "src/helpers/pollUntilTruthy.ts",
											"line": 40,
											"character": 9
										}
									],
									"signatures": [
										{
											"id": 1407,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1408,
													"name": "u",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "U"
													}
												},
												{
													"id": 1409,
													"name": "v",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "V"
													}
												},
												{
													"id": 1410,
													"name": "w",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "W"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									]
								}
							}
						},
						{
							"id": 1411,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "reference",
										"name": "U"
									},
									{
										"type": "reference",
										"name": "V"
									},
									{
										"type": "reference",
										"name": "W"
									}
								]
							}
						},
						{
							"id": 1412,
							"name": "timeout",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1413,
							"name": "pollInterval",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1414,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/helpers/pollUntilTruthy.ts",
									"line": 44,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 1415,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1476,
										"typeArguments": [
											{
												"type": "reference",
												"name": "T"
											}
										],
										"name": "CancellablePromise"
									}
								}
							]
						}
					}
				},
				{
					"id": 1416,
					"name": "pollUntilTruthy",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 1417,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1418,
							"name": "U",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1419,
							"name": "V",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1420,
							"name": "W",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1421,
							"name": "X",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1422,
							"name": "poller",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1423,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "src/helpers/pollUntilTruthy.ts",
											"line": 47,
											"character": 9
										}
									],
									"signatures": [
										{
											"id": 1424,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1425,
													"name": "u",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "U"
													}
												},
												{
													"id": 1426,
													"name": "v",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "V"
													}
												},
												{
													"id": 1427,
													"name": "w",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "W"
													}
												},
												{
													"id": 1428,
													"name": "x",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "X"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									]
								}
							}
						},
						{
							"id": 1429,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "reference",
										"name": "U"
									},
									{
										"type": "reference",
										"name": "V"
									},
									{
										"type": "reference",
										"name": "W"
									},
									{
										"type": "reference",
										"name": "X"
									}
								]
							}
						},
						{
							"id": 1430,
							"name": "timeout",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1431,
							"name": "pollInterval",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1432,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/helpers/pollUntilTruthy.ts",
									"line": 51,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 1433,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1476,
										"typeArguments": [
											{
												"type": "reference",
												"name": "T"
											}
										],
										"name": "CancellablePromise"
									}
								}
							]
						}
					}
				},
				{
					"id": 1434,
					"name": "pollUntilTruthy",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 1435,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1436,
							"name": "U",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1437,
							"name": "V",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1438,
							"name": "W",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1439,
							"name": "X",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 1440,
							"name": "Y",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 1441,
							"name": "poller",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1442,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"sources": [
										{
											"fileName": "src/helpers/pollUntilTruthy.ts",
											"line": 54,
											"character": 9
										}
									],
									"signatures": [
										{
											"id": 1443,
											"name": "__type",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1444,
													"name": "u",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "U"
													}
												},
												{
													"id": 1445,
													"name": "v",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "V"
													}
												},
												{
													"id": 1446,
													"name": "w",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "W"
													}
												},
												{
													"id": 1447,
													"name": "x",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "X"
													}
												},
												{
													"id": 1448,
													"name": "y",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "reference",
														"name": "Y"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									]
								}
							}
						},
						{
							"id": 1449,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "reference",
										"name": "U"
									},
									{
										"type": "reference",
										"name": "V"
									},
									{
										"type": "reference",
										"name": "W"
									},
									{
										"type": "reference",
										"name": "X"
									},
									{
										"type": "reference",
										"name": "Y"
									}
								]
							}
						},
						{
							"id": 1450,
							"name": "timeout",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1451,
							"name": "pollInterval",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1452,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/helpers/pollUntilTruthy.ts",
									"line": 58,
									"character": 2
								}
							],
							"signatures": [
								{
									"id": 1453,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 1476,
										"typeArguments": [
											{
												"type": "reference",
												"name": "T"
											}
										],
										"name": "CancellablePromise"
									}
								}
							]
						}
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Classes",
			"kind": 128,
			"children": [
				663,
				475,
				1,
				63
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				1476,
				1505,
				1596,
				1626,
				1611,
				1600,
				1455,
				1604,
				1633
			]
		},
		{
			"title": "Type aliases",
			"kind": 4194304,
			"children": [
				1454
			]
		},
		{
			"title": "Variables",
			"kind": 32,
			"children": [
				1123
			]
		},
		{
			"title": "Functions",
			"kind": 64,
			"children": [
				1238,
				1346
			]
		}
	],
	"sources": [
		{
			"fileName": "src/index.ts",
			"line": 1,
			"character": 0
		}
	]
}